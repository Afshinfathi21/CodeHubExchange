[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2023-12-07T12:43:25.650Z", "user": 1, "content_type": 6, "object_id": "3", "object_repr": "mmd", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2023-12-07T12:43:30.298Z", "user": 1, "content_type": 6, "object_id": "3", "object_repr": "mmd", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2023-12-07T12:43:51.892Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "python", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2023-12-07T12:43:57.001Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "html", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2023-12-07T12:44:00.479Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "css", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2023-12-07T12:44:04.424Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "c#", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2023-12-07T12:44:09.916Z", "user": 1, "content_type": 7, "object_id": "5", "object_repr": "java", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2023-12-07T12:44:15.198Z", "user": 1, "content_type": 7, "object_id": "6", "object_repr": "javascript", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2023-12-07T12:44:53.987Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "AWS EKS LoadBalancer DNS not responding", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2023-12-07T12:45:50.546Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Changing controls styles in avalonia according to OS theme", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2023-12-07T12:47:01.472Z", "user": 1, "content_type": 8, "object_id": "3", "object_repr": "FastAPI with LangChain: 'invoke' Route Returns Empty Output, While Streaming Works", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2023-12-07T12:47:21.528Z", "user": 1, "content_type": 8, "object_id": "4", "object_repr": "Unable to Retrieve data from API using Axios in React", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2023-12-07T12:48:12.246Z", "user": 1, "content_type": 8, "object_id": "5", "object_repr": "Transaction using Jena API on Fuseki SPARQL Endpoint does not actually modify the database", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2023-12-07T12:48:44.627Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "mmd - In Settings | Editor | Code Style | TypeScript | Imports, try disabling Use directory import when index.js is available (Node-style module resolution", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2023-12-07T12:49:31.857Z", "user": 1, "content_type": 9, "object_id": "2", "object_repr": "ahmadali - The problem is that the proper version of the library libgtk-3-dev and related dependencies are not in the main focal repository yet. My solution was to add focal-updates repo. You can do i", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2023-12-07T12:50:13.418Z", "user": 1, "content_type": 9, "object_id": "3", "object_repr": "ahmadali - I used this code like 6 months ago, it worked, hope it helps\r\n\r\n    <?php\r\n$accessToken = 'YOUR_ACCESS_TOKEN'; \r\n$organizationId = 'YOUR_ORGANIZATION_ID';\r\n\r\n$articleContent = [\r\n    'autho", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2023-12-07T16:49:26.256Z", "user": 1, "content_type": 8, "object_id": "6", "object_repr": "Angular nz-dropdown-menu dynamic parameters", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2023-12-07T16:50:12.414Z", "user": 1, "content_type": 8, "object_id": "7", "object_repr": "I have very simple structure, my question is why there is white border visible, I've tried everything but it's always visible in preview and in runtime", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2023-12-07T16:51:01.955Z", "user": 1, "content_type": 8, "object_id": "8", "object_repr": "I need to find a dynamic formula where I have a list of product names and it returns a relevant value", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2023-12-16T11:39:54.920Z", "user": 1, "content_type": 9, "object_id": "16", "object_repr": "ahmadali - hello /neshah bash", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2023-12-17T09:18:03.473Z", "user": 1, "content_type": 8, "object_id": "10", "object_repr": "hello", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2023-12-17T09:18:08.404Z", "user": 1, "content_type": 8, "object_id": "9", "object_repr": "h", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2023-12-17T10:27:54.201Z", "user": 1, "content_type": 8, "object_id": "19", "object_repr": "asd", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2023-12-17T10:27:54.218Z", "user": 1, "content_type": 8, "object_id": "18", "object_repr": "how to eshah bash", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2023-12-17T10:27:54.226Z", "user": 1, "content_type": 8, "object_id": "17", "object_repr": "sa", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2023-12-17T10:27:54.242Z", "user": 1, "content_type": 8, "object_id": "16", "object_repr": "sa", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2023-12-17T10:27:54.251Z", "user": 1, "content_type": 8, "object_id": "15", "object_repr": "sad", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2023-12-17T10:27:54.268Z", "user": 1, "content_type": 8, "object_id": "14", "object_repr": "yaju", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2023-12-17T10:27:54.281Z", "user": 1, "content_type": 8, "object_id": "13", "object_repr": "ag", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2023-12-17T10:27:54.292Z", "user": 1, "content_type": 8, "object_id": "12", "object_repr": "ag", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2023-12-17T10:27:54.301Z", "user": 1, "content_type": 8, "object_id": "11", "object_repr": "h", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2023-12-17T10:29:24.345Z", "user": 1, "content_type": 8, "object_id": "21", "object_repr": "ha", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2023-12-17T10:29:24.356Z", "user": 1, "content_type": 8, "object_id": "20", "object_repr": "ha", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2023-12-22T09:10:40.173Z", "user": 1, "content_type": 6, "object_id": "4", "object_repr": "ali", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2023-12-22T09:10:58.707Z", "user": 1, "content_type": 6, "object_id": "5", "object_repr": "mst", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2023-12-22T09:22:10.449Z", "user": 1, "content_type": 6, "object_id": "6", "object_repr": "MST", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2023-12-22T09:27:57.840Z", "user": 1, "content_type": 6, "object_id": "7", "object_repr": "mst", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2023-12-22T09:35:25.130Z", "user": 1, "content_type": 6, "object_id": "8", "object_repr": "mst", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2023-12-27T16:44:05.836Z", "user": 1, "content_type": 6, "object_id": "9", "object_repr": "farid", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2024-01-06T10:05:20.677Z", "user": 1, "content_type": 9, "object_id": "19", "object_repr": "farid - <p><strong>Django</strong>&nbsp;(<a href=\"https://en.wikipedia.org/wiki/Help:IPA/English\" title=\"Help:IPA/English\">/╦êd╩Æ&aelig;┼ï╔ío╩è/</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Help:Pronunc", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Comment\"]}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2024-01-06T10:34:53.815Z", "user": 1, "content_type": 9, "object_id": "22", "object_repr": "ahmadali - <div class=\"comment-section\">\r\n    <div class=\"row\">\r\n\r\n      <div class=\"post-comment\">\r\n        {% for comment in comments %}\r\n        <img src=\"{{ comment.user.profile_img_url }}\" alt=\"\"", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2024-01-07T16:12:38.108Z", "user": 1, "content_type": 9, "object_id": "23", "object_repr": "ahmadali - <p>&nbsp;&lt;div class=&quot;comment-section&quot;&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; &lt;div class=&quot;row&quot;&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &lt;div class=&quot;post-com", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Is answer\"]}}]"}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2024-01-07T16:12:44.831Z", "user": 1, "content_type": 9, "object_id": "20", "object_repr": "ahmadali - <p>hello my name is <strong>afshin</strong></p>", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Is answer\"]}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2024-01-07T16:12:49.893Z", "user": 1, "content_type": 9, "object_id": "19", "object_repr": "farid - <p><strong>Django</strong>&nbsp;(<a href=\"https://en.wikipedia.org/wiki/Help:IPA/English\" title=\"Help:IPA/English\">/╦êd╩Æ&aelig;┼ï╔ío╩è/</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Help:Pronunc", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Is answer\"]}}]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2024-01-07T16:12:56.107Z", "user": 1, "content_type": 9, "object_id": "10", "object_repr": "ahmadali - <pre>\r\nhello</pre>\r\n\r\n<pre>\r\n// Your code goes here\r\nfunction example() {\r\n  console.log(&quot;Hello, world!&quot;);\r\n}</pre>", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Comment\", \"Is answer\"]}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2024-01-07T16:13:02.725Z", "user": 1, "content_type": 9, "object_id": "3", "object_repr": "ahmadali - <p>I used this code like 6 months ago, it worked, hope it helps <!--?php\r\n$accessToken = 'YOUR_ACCESS_TOKEN'; \r\n$organizationId = 'YOUR_ORGANIZATION_ID';\r\n\r\n$articleContent = [\r\n    'author", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Comment\", \"Is answer\"]}}]"}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2024-01-20T09:17:10.412Z", "user": 1, "content_type": 8, "object_id": "23", "object_repr": "test1", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2024-01-20T09:17:14.445Z", "user": 1, "content_type": 8, "object_id": "26", "object_repr": "test2", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2024-01-20T09:17:21.582Z", "user": 1, "content_type": 8, "object_id": "6", "object_repr": "Angular nz-dropdown-menu dynamic parameters", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2024-01-21T09:35:31.598Z", "user": 1, "content_type": 8, "object_id": "25", "object_repr": "AWS EKS LoadBalancer DNS not responding", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2024-01-21T10:07:57.454Z", "user": 1, "content_type": 9, "object_id": "29", "object_repr": "farid - <p><span style=\"background-color:#3498db\">hi this is testing&nbsp;&nbsp;</span><span style=\"background-color:#ecf0f1\"><span style=\"font-size:9px\"><span style=\"color:#2ecc71\">sdfsafsdfsadf</spa", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2024-01-25T08:40:50.739Z", "user": 1, "content_type": 6, "object_id": "11", "object_repr": "test1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2024-01-25T08:40:54.290Z", "user": 1, "content_type": 6, "object_id": "11", "object_repr": "test1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2024-01-25T08:41:24.735Z", "user": 1, "content_type": 6, "object_id": "12", "object_repr": "test2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2024-01-25T08:41:26.785Z", "user": 1, "content_type": 6, "object_id": "12", "object_repr": "test2", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 56, "fields": {"action_time": "2024-01-25T08:41:47.138Z", "user": 1, "content_type": 6, "object_id": "13", "object_repr": "test4", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 57, "fields": {"action_time": "2024-01-25T08:42:41.258Z", "user": 1, "content_type": 6, "object_id": "14", "object_repr": "test5", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 58, "fields": {"action_time": "2024-01-25T08:42:42.860Z", "user": 1, "content_type": 6, "object_id": "14", "object_repr": "test5", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 59, "fields": {"action_time": "2024-01-25T08:43:07.692Z", "user": 1, "content_type": 6, "object_id": "15", "object_repr": "test6", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 60, "fields": {"action_time": "2024-01-25T08:43:09.591Z", "user": 1, "content_type": 6, "object_id": "15", "object_repr": "test6", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 61, "fields": {"action_time": "2024-01-25T08:43:25.356Z", "user": 1, "content_type": 6, "object_id": "16", "object_repr": "test7", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 62, "fields": {"action_time": "2024-01-25T08:43:27.332Z", "user": 1, "content_type": 6, "object_id": "16", "object_repr": "test7", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 63, "fields": {"action_time": "2024-01-25T08:44:06.936Z", "user": 1, "content_type": 6, "object_id": "17", "object_repr": "test9", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 64, "fields": {"action_time": "2024-01-25T08:44:09.835Z", "user": 1, "content_type": 6, "object_id": "17", "object_repr": "test9", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 65, "fields": {"action_time": "2024-01-25T08:44:36.071Z", "user": 1, "content_type": 6, "object_id": "18", "object_repr": "test10", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 66, "fields": {"action_time": "2024-01-25T08:44:37.548Z", "user": 1, "content_type": 6, "object_id": "18", "object_repr": "test10", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 67, "fields": {"action_time": "2024-01-25T08:44:53.119Z", "user": 1, "content_type": 6, "object_id": "19", "object_repr": "test11", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 68, "fields": {"action_time": "2024-01-25T08:44:53.885Z", "user": 1, "content_type": 6, "object_id": "19", "object_repr": "test11", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 69, "fields": {"action_time": "2024-01-29T07:54:40.758Z", "user": 1, "content_type": 6, "object_id": "11", "object_repr": "test1", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 70, "fields": {"action_time": "2024-01-29T07:54:40.774Z", "user": 1, "content_type": 6, "object_id": "18", "object_repr": "test10", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 71, "fields": {"action_time": "2024-01-29T07:54:40.788Z", "user": 1, "content_type": 6, "object_id": "19", "object_repr": "test11", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 72, "fields": {"action_time": "2024-01-29T07:54:40.801Z", "user": 1, "content_type": 6, "object_id": "12", "object_repr": "test2", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 73, "fields": {"action_time": "2024-01-29T07:54:40.806Z", "user": 1, "content_type": 6, "object_id": "13", "object_repr": "test4", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 74, "fields": {"action_time": "2024-01-29T07:54:40.823Z", "user": 1, "content_type": 6, "object_id": "14", "object_repr": "test5", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 75, "fields": {"action_time": "2024-01-29T07:54:40.840Z", "user": 1, "content_type": 6, "object_id": "15", "object_repr": "test6", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 76, "fields": {"action_time": "2024-01-29T07:54:40.852Z", "user": 1, "content_type": 6, "object_id": "16", "object_repr": "test7", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 77, "fields": {"action_time": "2024-01-29T07:54:40.857Z", "user": 1, "content_type": 6, "object_id": "17", "object_repr": "test9", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 78, "fields": {"action_time": "2024-01-29T09:34:56.640Z", "user": 1, "content_type": 8, "object_id": "27", "object_repr": "hello this is testing", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 79, "fields": {"action_time": "2024-01-29T09:34:56.663Z", "user": 1, "content_type": 8, "object_id": "24", "object_repr": "Testing ask question,new TextEditor", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 80, "fields": {"action_time": "2024-01-29T09:34:56.679Z", "user": 1, "content_type": 8, "object_id": "22", "object_repr": "how to create an app in django??", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 81, "fields": {"action_time": "2024-01-29T09:34:56.691Z", "user": 1, "content_type": 8, "object_id": "8", "object_repr": "I need to find a dynamic formula where I have a list of product names and it returns a relevant value", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 82, "fields": {"action_time": "2024-01-29T09:34:56.704Z", "user": 1, "content_type": 8, "object_id": "7", "object_repr": "I have very simple structure, my question is why there is white border visible, I've tried everything but it's always visible in preview and in runtime", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 83, "fields": {"action_time": "2024-01-29T09:34:56.722Z", "user": 1, "content_type": 8, "object_id": "5", "object_repr": "Transaction using Jena API on Fuseki SPARQL Endpoint does not actually modify the database", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 84, "fields": {"action_time": "2024-01-29T09:34:56.735Z", "user": 1, "content_type": 8, "object_id": "4", "object_repr": "Unable to Retrieve data from API using Axios in React", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 85, "fields": {"action_time": "2024-01-29T09:34:56.750Z", "user": 1, "content_type": 8, "object_id": "3", "object_repr": "FastAPI with LangChain: 'invoke' Route Returns Empty Output, While Streaming Works", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 86, "fields": {"action_time": "2024-01-29T09:34:56.769Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Changing controls styles in avalonia according to OS theme", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 87, "fields": {"action_time": "2024-01-29T09:34:56.786Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "AWS EKS LoadBalancer DNS not responding", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 88, "fields": {"action_time": "2024-01-29T09:37:18.832Z", "user": 1, "content_type": 8, "object_id": "28", "object_repr": "how to use linq with union multi table orderby item without duplicate with dapper in VB.NET", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 89, "fields": {"action_time": "2024-01-29T09:38:36.948Z", "user": 1, "content_type": 8, "object_id": "29", "object_repr": "The extension Intelephense declares functions and one variable as undefinied", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 90, "fields": {"action_time": "2024-01-29T09:39:15.291Z", "user": 1, "content_type": 8, "object_id": "30", "object_repr": "lost timezone value in redshift with postgresql external table", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 91, "fields": {"action_time": "2024-01-29T09:40:05.645Z", "user": 1, "content_type": 8, "object_id": "31", "object_repr": "Keeping query parameters in url when form entries are invalid [closed]", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 92, "fields": {"action_time": "2024-01-29T09:40:48.241Z", "user": 1, "content_type": 8, "object_id": "32", "object_repr": "How to read output of sed into a variable", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 93, "fields": {"action_time": "2024-01-29T09:41:27.081Z", "user": 1, "content_type": 8, "object_id": "33", "object_repr": "React Checkbox Component Unchecking Issue - All Checkboxes Cleared and Array Refilled on Slide Change", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 94, "fields": {"action_time": "2024-01-29T09:42:01.644Z", "user": 1, "content_type": 8, "object_id": "34", "object_repr": "React Checkbox Component Unchecking Issue - All Checkboxes Cleared and Array Refilled on Slide Change", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 95, "fields": {"action_time": "2024-01-29T09:42:46.962Z", "user": 1, "content_type": 8, "object_id": "35", "object_repr": "How can I test Spring Security JWT login in Spring Rest documentation?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 96, "fields": {"action_time": "2024-01-29T09:43:35.721Z", "user": 1, "content_type": 8, "object_id": "36", "object_repr": "Call onListen from EventChannel on android on flutter plugin", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 97, "fields": {"action_time": "2024-01-29T09:45:43.174Z", "user": 1, "content_type": 8, "object_id": "37", "object_repr": "Using Hotkeys Api and use switch method to switch between the Shortcuts in SAPUI5", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 98, "fields": {"action_time": "2024-01-29T09:46:24.091Z", "user": 1, "content_type": 8, "object_id": "38", "object_repr": "Search with autocomplete in Openweathermap API", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 99, "fields": {"action_time": "2024-01-29T09:50:36.217Z", "user": 1, "content_type": 8, "object_id": "38", "object_repr": "Search with autocomplete in Openweathermap API", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 100, "fields": {"action_time": "2024-01-29T09:50:36.242Z", "user": 1, "content_type": 8, "object_id": "37", "object_repr": "Using Hotkeys Api and use switch method to switch between the Shortcuts in SAPUI5", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 101, "fields": {"action_time": "2024-01-29T09:50:36.264Z", "user": 1, "content_type": 8, "object_id": "36", "object_repr": "Call onListen from EventChannel on android on flutter plugin", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 102, "fields": {"action_time": "2024-01-29T09:50:36.281Z", "user": 1, "content_type": 8, "object_id": "35", "object_repr": "How can I test Spring Security JWT login in Spring Rest documentation?", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 103, "fields": {"action_time": "2024-01-29T09:50:36.291Z", "user": 1, "content_type": 8, "object_id": "34", "object_repr": "React Checkbox Component Unchecking Issue - All Checkboxes Cleared and Array Refilled on Slide Change", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 104, "fields": {"action_time": "2024-01-29T09:50:36.310Z", "user": 1, "content_type": 8, "object_id": "33", "object_repr": "React Checkbox Component Unchecking Issue - All Checkboxes Cleared and Array Refilled on Slide Change", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 105, "fields": {"action_time": "2024-01-29T09:50:36.322Z", "user": 1, "content_type": 8, "object_id": "32", "object_repr": "How to read output of sed into a variable", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 106, "fields": {"action_time": "2024-01-29T09:50:36.339Z", "user": 1, "content_type": 8, "object_id": "31", "object_repr": "Keeping query parameters in url when form entries are invalid [closed]", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 107, "fields": {"action_time": "2024-01-29T09:50:36.354Z", "user": 1, "content_type": 8, "object_id": "30", "object_repr": "lost timezone value in redshift with postgresql external table", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 108, "fields": {"action_time": "2024-01-29T09:50:36.372Z", "user": 1, "content_type": 8, "object_id": "29", "object_repr": "The extension Intelephense declares functions and one variable as undefinied", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 109, "fields": {"action_time": "2024-01-29T09:50:36.386Z", "user": 1, "content_type": 8, "object_id": "28", "object_repr": "how to use linq with union multi table orderby item without duplicate with dapper in VB.NET", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 110, "fields": {"action_time": "2024-01-29T09:52:27.107Z", "user": 1, "content_type": 8, "object_id": "39", "object_repr": "CID encoding of font", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 111, "fields": {"action_time": "2024-01-29T09:52:54.561Z", "user": 1, "content_type": 8, "object_id": "40", "object_repr": "Get time zone information from a date in nodeJS or momentJS", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 112, "fields": {"action_time": "2024-01-29T09:53:31.966Z", "user": 1, "content_type": 8, "object_id": "41", "object_repr": "Matplotlib ValueError: trying to find out indices of the combinations, that have p < 0.05 and >= 0.01 [duplicate]", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 113, "fields": {"action_time": "2024-01-29T09:54:01.043Z", "user": 1, "content_type": 8, "object_id": "42", "object_repr": "Regex ignore specific string between two strings", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 114, "fields": {"action_time": "2024-01-29T09:54:42.058Z", "user": 1, "content_type": 8, "object_id": "43", "object_repr": "Excel Formula to highlight cell(s) in the same column based on time difference", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 115, "fields": {"action_time": "2024-01-29T09:55:11.981Z", "user": 1, "content_type": 8, "object_id": "44", "object_repr": "Migrating from SQLite to NoSQL (LiteDB)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 116, "fields": {"action_time": "2024-01-29T09:55:43.317Z", "user": 1, "content_type": 8, "object_id": "45", "object_repr": "Java Photoshop Script Execution", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 117, "fields": {"action_time": "2024-01-29T09:56:16.531Z", "user": 1, "content_type": 8, "object_id": "46", "object_repr": "CID encoding of font", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 118, "fields": {"action_time": "2024-01-29T09:56:52.269Z", "user": 1, "content_type": 8, "object_id": "47", "object_repr": "React Checkbox Component Unchecking Issue - All Checkboxes Cleared and Array Refilled on Slide Change", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 119, "fields": {"action_time": "2024-01-29T09:57:33.843Z", "user": 1, "content_type": 8, "object_id": "46", "object_repr": "CID encoding of font", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 120, "fields": {"action_time": "2024-01-29T09:58:46.805Z", "user": 1, "content_type": 8, "object_id": "48", "object_repr": "lost timezone value in redshift with postgresql external table", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 121, "fields": {"action_time": "2024-01-29T09:59:54.276Z", "user": 1, "content_type": 8, "object_id": "49", "object_repr": "how to use linq with union multi table orderby item without duplicate with dapper in VB.NET", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 122, "fields": {"action_time": "2024-01-29T10:01:53.535Z", "user": 1, "content_type": 8, "object_id": "44", "object_repr": "Migrating from SQLite to NoSQL (LiteDB)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 123, "fields": {"action_time": "2024-01-29T10:03:00.226Z", "user": 1, "content_type": 8, "object_id": "49", "object_repr": "how to use linq with union multi table orderby item without duplicate with dapper in VB.NET", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 124, "fields": {"action_time": "2024-01-29T10:03:47.367Z", "user": 1, "content_type": 8, "object_id": "50", "object_repr": "how to use linq with union multi table orderby item without duplicate with dapper in VB.NET", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 125, "fields": {"action_time": "2024-01-29T19:32:12.821Z", "user": 1, "content_type": 6, "object_id": "10", "object_repr": "farid", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 126, "fields": {"action_time": "2024-01-29T20:32:24.138Z", "user": 1, "content_type": 6, "object_id": "20", "object_repr": "test2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 127, "fields": {"action_time": "2024-01-29T20:32:25.560Z", "user": 1, "content_type": 6, "object_id": "20", "object_repr": "test2", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 128, "fields": {"action_time": "2024-01-29T20:32:30.141Z", "user": 1, "content_type": 6, "object_id": "20", "object_repr": "test2", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 129, "fields": {"action_time": "2024-01-29T20:32:38.373Z", "user": 1, "content_type": 6, "object_id": "20", "object_repr": "test2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Bio\"]}}]"}}, {"model": "admin.logentry", "pk": 130, "fields": {"action_time": "2024-01-29T20:32:44.989Z", "user": 1, "content_type": 6, "object_id": "20", "object_repr": "test2", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 131, "fields": {"action_time": "2024-01-30T17:51:10.926Z", "user": 1, "content_type": 6, "object_id": "21", "object_repr": "test1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 132, "fields": {"action_time": "2024-01-30T17:51:13.282Z", "user": 1, "content_type": 6, "object_id": "21", "object_repr": "test1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 133, "fields": {"action_time": "2024-01-30T19:55:30.828Z", "user": 1, "content_type": 9, "object_id": "31", "object_repr": "afshin - <p>None of the other functions here worked out the box, so I made this one.</p>\r\n\r\n<p>It takes a hex value, converts it to HSL, shifts the hue 180 degrees and converts back to Hex</p>\r\n\r\n<pre", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 134, "fields": {"action_time": "2024-01-31T09:10:49.439Z", "user": 1, "content_type": 6, "object_id": "24", "object_repr": "admin2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 135, "fields": {"action_time": "2024-01-31T09:10:52.074Z", "user": 1, "content_type": 6, "object_id": "24", "object_repr": "admin2", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 136, "fields": {"action_time": "2024-01-31T09:11:39.887Z", "user": 1, "content_type": 6, "object_id": "24", "object_repr": "admin2", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 137, "fields": {"action_time": "2024-01-31T09:14:01.970Z", "user": 1, "content_type": 6, "object_id": "25", "object_repr": "admin2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 138, "fields": {"action_time": "2024-01-31T09:14:03.438Z", "user": 1, "content_type": 6, "object_id": "25", "object_repr": "admin2", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 139, "fields": {"action_time": "2024-01-31T10:01:54.923Z", "user": 1, "content_type": 6, "object_id": "25", "object_repr": "admin2", "action_flag": 3, "change_message": ""}}, {"model": "sessions.session", "pk": "06jip0xxd21uof16hb5lo3i4ad075ghq", "fields": {"session_data": ".eJxVjEEOgjAQRe_S9YSUaWkLS_eewBgybQepGogUdGG8u5Cw0O1_77-3aGmZ-3bJPLUpikaggN_NU7jxsIF4peEyFmEc5in5YlOKnebiOEa-H3b3L9BT7td3WSEqNlGisWjqunLWWJJV0GQ6h7Z2XkkTfJQKQ9cRee2QldEhMgVt1-gz8Ytj-1g4z2kcsmhOqEEBGkAoQUMFFhwgnj9fb25D0w:1rOPmj:FR3vO_UFPzzX9DNQiE2enhHRgIHoc-FSwefcWxHMj9A", "expire_date": "2024-01-12T22:28:53.482Z"}}, {"model": "sessions.session", "pk": "1ngzn8td9l41ty1tnksw7v9y3oua4wwo", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMl19:1rET2J:rb-BGTo4Tqq9qbe44qU73WeXUCQPR2e0rLsmCE4cAbs", "expire_date": "2023-12-16T11:55:51.506Z"}}, {"model": "sessions.session", "pk": "1rs4ob09h0m5c3a1pfn1urigt2bq4glo", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rBEoa:m7GWr_fvyxkqN4i1xbYhFE53MQMMuDQAaj7NpQltJBM", "expire_date": "2023-12-07T14:08:20.725Z"}}, {"model": "sessions.session", "pk": "2b5hmmkzd71kvjgnblgjelrqx2xrnj9j", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rM5qZ:GwNRiYGWC-Cg-ipsdYgDkFqZPbh9SA6PP9WEaxeKXjk", "expire_date": "2024-01-06T12:47:15.290Z"}}, {"model": "sessions.session", "pk": "2k105l8ui52uneg0sciz1u55m5yp8pr4", "fields": {"session_data": ".eJxVjMEOwiAQRP-FsyFLKQU8eu83kIVdpGpKUtqT8d9tkx70Npn3Zt4i4LaWsDVewkTiKrS4_HYR05PnA9AD53uVqc7rMkV5KPKkTY6V-HU73b-Dgq3sazTgdWTliXrDPLBll1W_BwRy6AcHmsH67EkNmKPu2MTkDdguOSAQny_6nzhB:1rUsXH:FFi7zpNteJbnUMidKhUq_Gt9ip4AsEt5ufSz_AQZBDo", "expire_date": "2024-01-30T18:23:39.566Z"}}, {"model": "sessions.session", "pk": "2mx5tiudzsrl4tgptvm2kk9ls9kg273p", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rBFaT:5HxP8M6DlSQlLmfB__Za_k019jnXCFWI9p3L5SRhPoc", "expire_date": "2023-12-07T14:57:49.763Z"}}, {"model": "sessions.session", "pk": "30rytfsdff5hjegzodbag9cb98wvd24r", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rEtb4:8n0DQ0kmRu1Nm9I6WXhGe1cJm_xrqMC06JDe6cYUv_Y", "expire_date": "2023-12-17T16:17:30.876Z"}}, {"model": "sessions.session", "pk": "3azlsiaa95ddbotaqc1hudzbmg7jfg2o", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rDsd1:P8HIn4rPuNBcljTh_myofsoWn8EYgbenhp_8d0uL5HY", "expire_date": "2023-12-14T21:03:19.890Z"}}, {"model": "sessions.session", "pk": "3hn56w0bjbp5dso6d0kvkwjga4t3eiw6", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rBGPQ:qoCYpMkekDM8GShIJ54fgvxXrl55B_SARqVZBVAj0Hw", "expire_date": "2023-12-07T15:50:28.801Z"}}, {"model": "sessions.session", "pk": "3xep5u6pc3ki44cjzxsf4d56yns3ytfn", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rChoE:QHK-TUCV9q2tDrwrNCV1vDmlvAEOuTuu9vbumLl5Gpo", "expire_date": "2023-12-11T15:18:02.917Z"}}, {"model": "sessions.session", "pk": "4611zqslviyrjgpx8ih98dxl961dxrh9", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rSuv2:J6trOdHztXpY4R6fDBim-1WOpd5FjlbZcuMOa6i0E8g", "expire_date": "2024-01-25T08:32:04.971Z"}}, {"model": "sessions.session", "pk": "4fd7djmympcgsjnjl1pwf9aqpnlm4yaa", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSE8ygx16d5vIMwAUjU0Ke3K-O_apAvd3nPOfYkQt7WGreclTEmcxShOvxtFfuS2g3SP7TZLntu6TCR3RR60y-uc8vNyuH8HNfb6rUuxxKxQo4Y0QFQmkUdt2TpgIgTM2vnkrTWcFaDxfoBS0DGTGT2I9wfkqDeJ:1rIRii:adRcGBRnESIXB4v578EpFxlQm94RY81ehnpEhplWB4c", "expire_date": "2023-12-27T11:20:04.739Z"}}, {"model": "sessions.session", "pk": "4j7l6kw0m5w3de0y6k814oe6own9fwxc", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rRvTT:om6VHe97cOslpxQsFW_ocK-DVy6xuvbfOTWuzQ6lqWQ", "expire_date": "2024-01-22T14:55:31.416Z"}}, {"model": "sessions.session", "pk": "4x058pgnh17kwb7ro80heoubfh2quu2e", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMl19:1rOkVI:aJ9vDSUGG5oTYjNmXuI07I4KS9uKjRXrD_MtLukXo_c", "expire_date": "2024-01-13T20:36:16.234Z"}}, {"model": "sessions.session", "pk": "5cskyz2m31gd9rykshaoo3kaawmdkzfw", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gzY7nfzGG6UVxCvmC-Fh5KnMXm-KnyjlR9LpPthc_8CA9ZheTctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2PzXnzxcQrj_Y:1rSMDZ:MNOvtFu5yIwC09ty5UKLXj4Ptwfin2hclvVCqipXH_s", "expire_date": "2024-01-23T19:28:53.213Z"}}, {"model": "sessions.session", "pk": "5k7vupdyjv47wvdjre1nwa1s5jl2ybvl", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0NwoUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gxY87t5DDfKK4hXzJfCQ8nTmDxfFb7Ryo8l0v2wuX-BAeuwvHctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2P6lGnj9fkAJAOg:1rPMGK:uJ9S6_RaTia4kf2_Ki-skQeNyTPOBteWmBrmHol0sHI", "expire_date": "2024-01-15T12:55:20.772Z"}}, {"model": "sessions.session", "pk": "5ri17qz6yrks5rsh843kbpm9s1vbc1x6", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rBGKr:ZqsfL6iKUm5RyQLTLf5Z9oIdclUJQL-cUKBwJDSVoDM", "expire_date": "2023-12-07T15:45:45.261Z"}}, {"model": "sessions.session", "pk": "5w7qig66zhnb4h2i97nqzi7s022dovqq", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMSwyNl19:1rQXjm:LD8sN7DAExKTuuewfV2EbTZQOpw5VIXSjpB5o8ul210", "expire_date": "2024-01-18T19:22:38.809Z"}}, {"model": "sessions.session", "pk": "61ijzbk6w3hj0u7jrxyo4woezj50repa", "fields": {"session_data": ".eJxVjEEOwiAURO_C2hAopYUu3fcExpAP_9eiBmJpdWG8u23She4mM2_emzlY5tEthSYXkXVMscNv5yHcKG0DXiFdMg85zVP0fEP4vhbeZ6T7cWf_BCOUcX2DFlZ5khax1kQNtWQGWa8BBBqwjRGKRGsHi7KBwauKtA9Wi7YKRqBYpc9IL0L3WKjMMafCupOW588XrBlA1w:1rUqjN:jP7RLtulmQDeuOGpHJa3pJQVEcjJfNKJNmW1yEL9O3I", "expire_date": "2024-01-30T16:28:01.950Z"}}, {"model": "sessions.session", "pk": "6bltyxr8lyks6wujha8n254m2vnr3llr", "fields": {"session_data": ".eJxVjMEOwiAQRP-FsyFLKQU8eu83kIVdpGpKUtqT8d9tkx70Npn3Zt4i4LaWsDVewkTiKrS4_HYR05PnA9AD53uVqc7rMkV5KPKkTY6V-HU73b-Dgq3sazTgdWTliXrDPLBll1W_BwRy6AcHmsH67EkNmKPu2MTkDdguOSAQny_6nzhB:1rUshw:fdZ4Fp-B4NHxCkWNB7uQVMIzSOVrKN14Bt3h8SQ74RI", "expire_date": "2024-01-30T18:34:40.630Z"}}, {"model": "sessions.session", "pk": "6dmwzrvacu5rt1vjnnmzmiict2ur3os7", "fields": {"session_data": ".eJxVjMsOwiAURP-FdUO4UOhj6d4vMIZc4GJRU2JpdWH8d9ukmy5nzpn5sneiDwX7WqjMKY-F9ReoZCX1tWIWl3mwS6HJpsB6BoIdSof-QeNGwh3HW-Y-j_OUHN8UvtPCzznQ87S7h4MBy7CuZQfRgHHBNKAxYqOVI2rr6KkRBKAAW00mKiF1wA7WCOBFiDW0kbRivz_hhEFH:1rMSCE:UT5sj416-l85Ilg67lcirMN-C0-4-1VTj4sznDTM-d4", "expire_date": "2024-01-07T12:39:06.643Z"}}, {"model": "sessions.session", "pk": "6fx4npsla05fzax23cy2l06tarsem541", "fields": {"session_data": ".eJxVjMEOwiAQRP-FsyFLKQU8eu83kIVdpGpKUtqT8d9tkx70Npn3Zt4i4LaWsDVewkTiKrS4_HYR05PnA9AD53uVqc7rMkV5KPKkTY6V-HU73b-Dgq3sazTgdWTliXrDPLBll1W_BwRy6AcHmsH67EkNmKPu2MTkDdguOSAQny_6nzhB:1rUtLB:2Xm8dSN3QZwwvDDlRhqrpw73OgoQPnh0oEWNWbKiKpI", "expire_date": "2024-01-30T19:15:13.059Z"}}, {"model": "sessions.session", "pk": "6supk25f62bm9qg3wx8p6qxq9jf8auzz", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbNCwxLDIsMyw3XX0:1rBHw9:r0M3OSWsHV2KvajYdbjjlumevxmAEibtWrU4hfTbmgM", "expire_date": "2023-12-07T17:28:21.323Z"}}, {"model": "sessions.session", "pk": "7ibrynoq7syd1vhgq8hpgzeniggzqr9p", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rDO2f:mfpm55BQK9GQNDRAhxKJxaICOV4nZUbBI5IymFxB6_4", "expire_date": "2023-12-13T12:23:45.032Z"}}, {"model": "sessions.session", "pk": "7ixtu7vkqg959l5noj6zxg849nfpp3an", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rJArC:KlMMnSh01BfHSdwswhQ2Llpuv8w-z0RkG_rcCHqRmJk", "expire_date": "2023-12-29T11:31:50.104Z"}}, {"model": "sessions.session", "pk": "7lulsa1pkfruxmk70m0ygx2dq2gl0k81", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rPIgv:skmtvJWUG1i9IdLCGmAX5iYnNfIP-1-7YRMDGSayu2A", "expire_date": "2024-01-15T09:06:33.542Z"}}, {"model": "sessions.session", "pk": "7r7ku5szqpyivpv6yyl94qx2nzxmddd5", "fields": {"session_data": ".eJxVjDsOwjAQBe_i2orM-k9JzwkQstb2hhhQIuIECsTdSaQU0L6ZN28WcJ66MFcaQ8lsz4Dx3y1iulG_gnzF_jI0aeinscRmVZqN1uY4ZLofNvcv0GHtlvdOA0gyWYCxYLzXzhqLQieFpnVgvYtSmBSzkJDaFjEqBySNSpkwKbtEn4VelMNjpjqVoa9sf9LApedKcAXnzxeVVUHI:1rWAjU:baq1lnpGiyX-pNwnjO4mIOY6ojycm0ApZukf8uNV6q4", "expire_date": "2024-02-03T08:01:36.868Z"}}, {"model": "sessions.session", "pk": "7rdsbec40kta7uxorzu210s9nz0584ym", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rM4Wu:jwYhtJ_Ncoi8FdkPp54ov70Z66icKDHDhXS8geY8flo", "expire_date": "2024-01-06T11:22:52.836Z"}}, {"model": "sessions.session", "pk": "7riyb4496213wt974as2k1hi9uhlyor9", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rSLei:MEm9LizanvZLKnG9I-Tna_Ru-xsBVNMWXxMeZ-Ey53U", "expire_date": "2024-01-23T18:52:52.135Z"}}, {"model": "sessions.session", "pk": "8fqrvw1epflz1421730jo4j5hzn68hn5", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gzY7nfzGG6UVxCvmC-Fh5KnMXm-KnyjlR9LpPthc_8CA9ZheTctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2PzXnzxcQrj_Y:1rEmw9:Lk78TWNgNiqjDGXwB4cg-YB44CRRpGKMnp9-XZ7r4XE", "expire_date": "2023-12-17T09:10:49.112Z"}}, {"model": "sessions.session", "pk": "8uw3e977yu0qtfsk10f5h5jn660iw4qk", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rDjNH:KX4Hy3IdU2oYd8iDxpJnUNZJtqqEzJDnnekMgrMyFok", "expire_date": "2023-12-14T11:10:27.855Z"}}, {"model": "sessions.session", "pk": "8ydgkj5i7zu9sog5kszpzxi5o9of4g3o", "fields": {"session_data": ".eJxVjDsOwjAQBe_iOoqc9TeU9JwAIWttb4gB2SJOoEDcHSKlSftm5n3YK9GbonsuVOdUcmWHM6hGNN2lYQ6XeXRLpcmlyA4M2G7zGO6UVxBvmK-lDSXPU_LtqrQbre2pRHocN3d3MGId_3WnAATpyEEb0H2vrNEGuQoS9WDB9NYLroOPXEAYBkQvLZDQMkTCIA37_gCG_kDK:1rR7gZ:AQJ_O0jV7eeIzwsvNOoJlKmE3a_YVUBcZE-D2k6qr_Q", "expire_date": "2024-01-20T09:45:43.033Z"}}, {"model": "sessions.session", "pk": "9be161d7zeinfm86826d3a2lwaxhpjkq", "fields": {"session_data": ".eJxVjDsOwjAQBe_iOorM-puU9JwAIWttb4gB2SJOoEDcHSKlSftm5n3YK9GbonsuVOdUcmX9WTWyEZeGOVzm0S2VJpci6xmw3eYx3CmvIN4wX0sbSp6n5NtVaTda21OJ9Dhu7u5gxDr-64MCEKQjB21Ad52yRhvkKkjUgwXTWS-4Dj5yAWEYEL20QELLEAmDNOz7A14gQJs:1rEnyP:XHLkOt-EdLaWJ3QWtMt9YMU_QxXJV3H7VAAhVHBDFSs", "expire_date": "2023-12-17T10:17:13.004Z"}}, {"model": "sessions.session", "pk": "9hjv5cqh0evoqw68gm44efhvh5wgaaz3", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGln-rb1Q0nMGa2OvcQA5UpxUiLuTSCmgmWLem3mLSOtS49p5jmMWF6HF6bcbKD257SA_qN0nmaa2zOMgd0UetMvblPl1Pdy_g0q9bmtCcOxzQbaOnQZlz0jIW1hD6BLoFIpxyftsDCgwKrjANqNSGguA-HwBzSA2vg:1rSwFs:FvmQ93mrcOLYtzYgu1StDGVxhKhgTqweJI7GwsU4_mo", "expire_date": "2024-01-25T09:57:40.180Z"}}, {"model": "sessions.session", "pk": "9kpm27mpnnqx00pwljx9jdr5182qzl83", "fields": {"session_data": ".eJxVjMEOwiAQRP-FsyFLKQU8eu83kIVdpGpKUtqT8d9tkx70Npn3Zt4i4LaWsDVewkTiKrS4_HYR05PnA9AD53uVqc7rMkV5KPKkTY6V-HU73b-Dgq3sazTgdWTliXrDPLBll1W_BwRy6AcHmsH67EkNmKPu2MTkDdguOSAQny_6nzhB:1rUsrk:_KQhg5AnbwEOshciF5xbdhYyi0Ko30sDRpE8AdcuQUk", "expire_date": "2024-01-30T18:44:48.407Z"}}, {"model": "sessions.session", "pk": "9z6dkwuwda24mchjk8f4ij84svx9hpcy", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rBJ3x:AWEdd2IBoTIvXPXq2RKBafGjY2wZc4iSS0wU3KhYCmI", "expire_date": "2023-12-07T18:40:29.896Z"}}, {"model": "sessions.session", "pk": "auyav8hvp3maib403h5m675b5yczeslq", "fields": {"session_data": ".eJxVjDsOwjAQBe_iOrKcjX-hpOcECFlre0MMyBZxAgXi7hApTdo3M-_DXoneFN1zoTqnkis7nNsGGnVpmMNlHt1SaXIpsgMDtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8160C6EhHAdqA7ntljTYoVJCoBwumt74TOvgoOgjDgOilBeq0DJEwSMO-P1tYQJc:1rFArm:AdBylZVQ8aJDqRg445QMqVfc8k1oh-T19AbGxVaCR48", "expire_date": "2023-12-18T10:43:54.451Z"}}, {"model": "sessions.session", "pk": "azflbkijqnjxmj7o3k0woyo14ze77ntj", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbNTBdfQ:1rUYbO:yGRY0ReEMjaz7Oghmbqiw0XpQImAbT5HtisgI5Ev8Sk", "expire_date": "2024-01-29T21:06:34.448Z"}}, {"model": "sessions.session", "pk": "b7v4r99l5zv4oupyj5bztpnfdddpnzoz", "fields": {"session_data": ".eJxVjMsOwiAUBf-FdUMob1y69wuMIRe4taiBWFpdGP9dm3TT7ZmZ8yGvjG9M_rlgm3MtjRzOwnWq7yS7dMTDMo9-aTj5nMiBcLLbAsQ7lhWkG5RrpbGWecqBrgrdaKOnmvBx3NzdwQht_Ne94lygToxrw7VzyhptgKkoQQ-WG2eDYDqGxASPwwAQpOUotIwJIUpDvj_iOUE1:1rYAG5:hLeHe5_8hR9VCXxg7pTsjXrGZNS7SLiz-V1dK5Lv9AE", "expire_date": "2024-02-08T19:55:29.118Z"}}, {"model": "sessions.session", "pk": "blxdx0xh3g1uxmj9n5mrt5997wucykj4", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMSwyXX0:1rBYKG:6ZsC_8VpM1yb4NNUKW2eyPA3-Y52plcnAdNx1qC1q8o", "expire_date": "2023-12-08T10:58:20.675Z"}}, {"model": "sessions.session", "pk": "brnlm1o61e6cz2ajhdfe6z9eqib7byfd", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbNTAsMzksNDgsNDUsNDFdfQ:1rUOVY:aw5hcsnZDjAWfsB9yX1ZWHSweYaNH3mSzmixbRWuYhw", "expire_date": "2024-01-29T10:19:52.242Z"}}, {"model": "sessions.session", "pk": "bzhdnl1aawypqhanwwnhhg960469kafl", "fields": {"session_data": ".eJxVjMEOgjAQRP-lZ9MUSqHr0btfYEyz7S5SNW2koAfjvwsJB71NZt68t3A4T4ObC48uktgLLXa_ncdw47QOdMV0yTLkNI3RyxWR21rkMRPfDxv7JxiwDMsbjQLtuQKixjC33LHtq2YJqMgitFZpVh30QFWLvdc1Gx_AqK4OVpFapM_ILyb3mLlMMaci9icN588XrClA3Q:1rUsbq:svAA3xGTdxKwHvJVS1wF-QI3hjFMhenSozTiRfuVubg", "expire_date": "2024-01-30T18:28:22.313Z"}}, {"model": "sessions.session", "pk": "c0gk8k8q1wcufpdlze9jbgk1xwbj30rg", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rRxiH:qeIj4iBS87IK5Ey60jX_R08ImPnoIGxozrXjMHiGZhs", "expire_date": "2024-01-22T17:18:57.570Z"}}, {"model": "sessions.session", "pk": "cc9i9zinhawetinc1rz2vndh1jfx1tkq", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rMRuw:zmP3qkYGUlP8LRTaAVEgbPYLy39RszT8nAZGTprYw9s", "expire_date": "2024-01-07T12:21:14.358Z"}}, {"model": "sessions.session", "pk": "cd599wj8dxt189l579hpkvgqx2q4x9ns", "fields": {"session_data": "e30:1rV6LR:CMZWn-Z1MgtYbk8on3bCIVGGqzLeeAO6Tqdf0P2DjX8", "expire_date": "2024-01-31T09:08:21.014Z"}}, {"model": "sessions.session", "pk": "cgyczj19kvrzdl2p78xhi2tr72wds3on", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rJHLX:L0We-LPdvrLuW4mnrCHR6rdxbO8HBvWBKK7LrdSoNxo", "expire_date": "2023-12-29T18:27:35.092Z"}}, {"model": "sessions.session", "pk": "ck8vohcptr2iz4hsuq441ekomy7wftpx", "fields": {"session_data": ".eJxVjMEOwiAQRP-FsyFLKQU8eu83kIVdpGpKUtqT8d9tkx70Npn3Zt4i4LaWsDVewkTiKrS4_HYR05PnA9AD53uVqc7rMkV5KPKkTY6V-HU73b-Dgq3sazTgdWTliXrDPLBll1W_BwRy6AcHmsH67EkNmKPu2MTkDdguOSAQny_6nzhB:1rFtjX:O5zECKMlhnT27C20yNRaMTKiIONV998QoEEMiEkVBiM", "expire_date": "2023-12-20T10:38:23.390Z"}}, {"model": "sessions.session", "pk": "d59i5nhyjsqnulwlfa6gnfr1iip9qvn3", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0NwoUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6s24ALg1zuMyjWypNLkXWM2C7zWO4U15BvGG-Fh5Knqfk-arwjVZ-KpEex83dHYxYx399aAEk6ShAG9Bd11qjDYo2KNSDBdNZL4UOPgoJYRgQvbJAUqsQCYMy7PsDNidAbQ:1rEoQu:pMcrd9Cio9ktrcE9gmzr3sRG_IvW0c9l-RywHeyMvxg", "expire_date": "2023-12-17T10:46:40.696Z"}}, {"model": "sessions.session", "pk": "dgridtmgflkr0je9iz5rwhiz6wwttkpa", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyG4UKA9eu8XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mq6sxKXA3O4zKNbKk0uRdYxYLvNY7hTXkG8Yb4WHkqep-T5qvCNVt6XSI_T5u4ORqzjvz42AJJ0FKAN6LZtrNEGRRMU6sGCaa2XQgcfhYQwDIheWSCpVYiEQRn2_QHioEAL:1rVBQ5:-Qa7rgfMOBkQDnqNnKXnKvIPdi5VZOEG95G9VX7YDS4", "expire_date": "2024-01-31T14:33:29.574Z"}}, {"model": "sessions.session", "pk": "dpkhhz9n1p7e9jdfp5t9g1afqrpjd0gf", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rMUcI:wEN2ZqkRoAjABPLlc7erWSUnK0iapEVJwKgrl4QQKrw", "expire_date": "2024-01-07T15:14:10.096Z"}}, {"model": "sessions.session", "pk": "dxh6mbfc59erww820x52ksiytf3omile", "fields": {"session_data": ".eJxVjMsOwiAQRf-FddPQgfJw6d4vMIYMMLWogVhaXRj_XZt00-0959wPeyV6U3TPheqcSq7scBa2kd2lYQ6XeXRLpcmlyA4M2G7zGO6UVxBvmK-lDSXPU_LtqrQbre2pRHocN3d3MGId_3XXAwhSkYPSoKztjVYaeR8kqsGAtsYLroKPXEAYBkQvDZBQMkTCIDX7_gBkTECk:1rW9Uq:atiov9tn6lgEdxDfpS0UHjBWOscUz1_i73a9Hd-qtvM", "expire_date": "2024-02-03T06:42:24.881Z"}}, {"model": "sessions.session", "pk": "e53yee09n80zht7wa2iu1gpgqvzpv2i2", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rCkNv:l0LUKmIwD_vi5YrA1ztsW86735h5kKqmCpIx_8T0s_Y", "expire_date": "2023-12-11T18:03:03.154Z"}}, {"model": "sessions.session", "pk": "fg8q8bujbhknuzxk9h4ym4pom5tvo1v6", "fields": {"session_data": ".eJxVjEEOgyAURO_y18SAgILL7nuCpiHA_1bbBlLRdtH07tXEjYtJJvNm5gvvkT6E7rVQmcecCnQXwWqmmGYggEG9SgGTVwbOL_PglkKTGxE6kHDIgo8PShvAu0-3XMWc5mkM1Vapdlqqc0Z6nvbu4WDwZVjXXnMrAwmLqDRRQy2ZXqjVeI7G28ZwSby1vUXR-D7ImnSIVvO2joYjh98fE6BEBw:1rBEjF:WNygMwSNqtFLNNA8FykZsunbo94P2pL97tqAEKdTFA8", "expire_date": "2023-12-07T14:02:49.411Z"}}, {"model": "sessions.session", "pk": "g1mgitroatt3m0cql8ucfy3zuofackop", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0PolgLt0btfYAxZYGtRA7G0ejD-u23Sg17fzJs3s7jMo10KTTYG1jNg1e_m0N8obSBcMV0y9znNU3R8U_hOCz_mQPfD7v4FRizj-q5bgIZUEKA0qK5rjVYaReslqsGA7oxrhPIuiAb8MCA6aYAaJX0g9FKv0WekFwX7WKjMMafC-lNdgawAzp8vkOFA-g:1rMnbw:ow-sdSyjxZlJxhlzZjJrhePkY5gPzAoKuijnOSISCE0", "expire_date": "2024-01-08T11:31:04.180Z"}}, {"model": "sessions.session", "pk": "gy3nuwjj8qpvajm8kihu7ltklr88ru63", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rMWBF:tFiAm5Hd881F_7WZuqUgX4xoQeQBS_9gX6_9e3gWIY8", "expire_date": "2024-01-07T16:54:21.965Z"}}, {"model": "sessions.session", "pk": "gy5fnkgxq9x5lgaz146k9tmjhpy4fq63", "fields": {"session_data": ".eJxVjMEOwiAQRP-FsyFLKQU8eu83kIVdpGpKUtqT8d9tkx70Npn3Zt4i4LaWsDVewkTiKrS4_HYR05PnA9AD53uVqc7rMkV5KPKkTY6V-HU73b-Dgq3sazTgdWTliXrDPLBll1W_BwRy6AcHmsH67EkNmKPu2MTkDdguOSAQny_6nzhB:1rUsE8:BwbHL6kN2c5ztUD0Jf6DcipYcJ8Ib7mEQ8f4eDcl4A8", "expire_date": "2024-01-30T18:03:52.873Z"}}, {"model": "sessions.session", "pk": "h4x421rkg0lrxqsdmh9gpgdmqnm9w2iq", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rClU6:3fQwlrfgCEDSUG7y4gdtPBaginONac_85VmdcMsZ4tE", "expire_date": "2023-12-11T19:13:30.116Z"}}, {"model": "sessions.session", "pk": "hcjynjhyodhv7xi86qj2cu48jn4srml5", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMSw4XX0:1rDshw:-udySqKV8VDjV7ADQuhAw-AdGVqF55I7lo0KFRgxBuc", "expire_date": "2023-12-14T21:08:24.355Z"}}, {"model": "sessions.session", "pk": "hpdryhqyjnk7zfknvb1a71d5qw8412wb", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGln-rb1Q0nMGa2OvcQA5UpxUiLuTSCmgmWLem3mLSOtS49p5jmMWF6HF6bcbKD257SA_qN0nmaa2zOMgd0UetMvblPl1Pdy_g0q9bmtCcOxzQbaOnQZlz0jIW1hD6BLoFIpxyftsDCgwKrjANqNSGguA-HwBzSA2vg:1rVVaa:BiuNuj0PfToEG6-l5P0aAAnFse5rX2Etu2z4Ns4s74Y", "expire_date": "2024-02-01T12:05:40.224Z"}}, {"model": "sessions.session", "pk": "hyarncw6l82l0g2k5l4nimzeq3apxzpq", "fields": {"session_data": ".eJxVjDsOgzAQRO_iOrK8GH9ImZ4zWGt7NyaJjIShinL3gESRlDPvzbxFwG0tYWu0hCmLqwAlLr9lxPSkepD8wHqfZZrrukxRHoo8aZPjnOl1O92_g4Kt7OtuALZgY7YODDI6oyOR7zmRUwSgAb0hy1p1JuMAewRIKnMPnslo8fkCA9Q39Q:1rIXBr:rYWe78hutRQhRe3dse7gu_oHiBkYHI6OqqP_zWRUx1I", "expire_date": "2023-12-27T17:10:31.750Z"}}, {"model": "sessions.session", "pk": "jbdk8hl9cgzh78ad2auo1tphms98dowf", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMjUsM119:1rRINM:fZnI-0bZngs6AaEyJ3zp9dTtTAr6jCfvF4Ihr6E6kUs", "expire_date": "2024-01-20T21:10:36.224Z"}}, {"model": "sessions.session", "pk": "jobn12bg3p9a7wen1pa7ufqcwmjyxu62", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rD8v5:ndVIiidaieQXw06p6txyvxGTmPxaUq-s59XUWTn0uUQ", "expire_date": "2023-12-12T20:14:55.182Z"}}, {"model": "sessions.session", "pk": "jrt7o9j83pbvq3l0jed26x9xv1hqm70k", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMiw3XX0:1rP9Lf:hele9M1SQ7XiKOGvFWSiXqCFggnZINEciZ0DLMG97wI", "expire_date": "2024-01-14T23:07:59.958Z"}}, {"model": "sessions.session", "pk": "js2b6wymvqt751f3w0vo32x636u33f67", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rEQYU:W3SZWZ6y8or2iqmC6iH7ravT6o-obi0vzXdbEsZzF6w", "expire_date": "2023-12-16T09:16:54.707Z"}}, {"model": "sessions.session", "pk": "jtwt20rqr1ge5qx1nkmyfjl0ibs46qr1", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rBH9D:0MMlgH_qbtx9zxNZ9xoTpfWK26zTio3rhubGiOU0-H8", "expire_date": "2023-12-07T16:37:47.721Z"}}, {"model": "sessions.session", "pk": "judw0q7j27d1ybvp4mz254r8yp1x9gag", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0PoQoF69O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5MoO57YBuDTM4TKPbqk0uRTZgQHbbR7DnfIK4g3ztfBQ8jwlz1eFb7TyU4n0OG7u7mDEOv7rtgOQpKMAbUD3fWeNNii6oFAPFkxvvRQ6-CgkhGFA9MoCSa1CJAzKsO8PMrdAaA:1rFJOx:FqWmF946ubbBl1QNfdQnk9X_c3OyhnuoPBNvxNhEWFE", "expire_date": "2023-12-18T19:50:43.662Z"}}, {"model": "sessions.session", "pk": "kvbhiiazznuim36stq4u32tmexsem1ic", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rCCzc:urd4wJaMfu4CTlMaU30xMiSnjJmsE4cSyITIp3dpxDU", "expire_date": "2023-12-10T06:23:44.996Z"}}, {"model": "sessions.session", "pk": "lcb586pxzm6s9dueea69h6ybgme8x3my", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMSwyLDVdfQ:1rOke3:Dg3lZm3q04POLIMuV2AzpdgZvJu7FMOnX1iZKXjGjDg", "expire_date": "2024-01-13T20:45:19.235Z"}}, {"model": "sessions.session", "pk": "li9dhsnnys1wgg8a68ieqk5ddwkp4b8b", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0PoQoF69O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5MoO57ZRl4Y5XObRLZUmlyI7MGC7zWO4U15BvGG-Fh5Knqfk-arwjVZ-KpEex83dHYxYx3_ddgCSdBSgDei-76zRBkUXFOrBgumtl0IHH4WEMAyIXlkgqVWIhEEZ9v0BCZVAOA:1rK0dS:DcIu1vLtglmZKOOCpK-MPkvx2suLoLFPBPBQPUtGyZQ", "expire_date": "2023-12-31T18:49:06.960Z"}}, {"model": "sessions.session", "pk": "m2aovxn9fhwtj5xjdk0x48fgwoprqekh", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gzY7nfzGG6UVxCvmC-Fh5KnMXm-KnyjlR9LpPthc_8CA9ZheTctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2PzXnzxcQrj_Y:1rEmC5:lIdI9bcTavHY_wcnVoo936XFRD3TwHS32hg1oa0B1dw", "expire_date": "2023-12-17T08:23:13.330Z"}}, {"model": "sessions.session", "pk": "m74vube6eda62crptu5fclhy51vs05pa", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyG4UKA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXIOgZs97t5DDfKK4hXzJfCQ8nTmDxfFb7Ryo8l0v2wuX-BAeuwvPcNgCQdBWgDum0ba7RB0QSFurdgWuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVfWnUCdP19QTEAN:1rNg8s:t43R52SzTuu-OXDf9UqDC4KUFxU1J4qJaEHsDwiGmvc", "expire_date": "2024-01-10T21:44:42.115Z"}}, {"model": "sessions.session", "pk": "mcksgy1jxdzncrvsarv8y3lmnjm3jrtf", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gzY7nfzGG6UVxCvmC-Fh5KnMXm-KnyjlR9LpPthc_8CA9ZheTctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2PzXnzxcQrj_Y:1rETrd:amZOooN_HzkLnDCFaRiUq7E4HhbgvHPOJ1nyjsRlaBA", "expire_date": "2023-12-16T12:48:53.918Z"}}, {"model": "sessions.session", "pk": "mi7ii7ndthu2up4pboqn6o1bvtym48ju", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0PoQoF69O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5MoO57aBS8McLvPolkqTS5EdGLDd5jHcKa8g3jBfCw8lz1PyfFX4Ris_lUiP4-buDkas479uOwBJOgrQBnTfd9Zog6ILCvVgwfTWS6GDj0JCGAZEryyQ1CpEwqAM-_4ACDtANg:1rK1dn:e--oyIm9785DdhLbtVkLL-YXwjLGZCoAwhY-vyXY6rw", "expire_date": "2023-12-31T19:53:31.554Z"}}, {"model": "sessions.session", "pk": "mib4w0h5mlitu1uzlz2bj87si9ylsa5l", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gzY7nfzGG6UVxCvmC-Fh5KnMXm-KnyjlR9LpPthc_8CA9ZheTctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2PzXnzxcQrj_Y:1rDkoQ:_-iWu7tAmJPH864vdpLyjEGFZ_nkzD5VqtFf9ja5kCc", "expire_date": "2023-12-14T12:42:34.393Z"}}, {"model": "sessions.session", "pk": "mtbbw1qmvuztpxjltn3jpu5yxqo6zn1q", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0PoQoH26N0vMIYssLWoKbG0ejD-u23Sg17fzJs3c7jMg1sKTS5F1jFg1e_mMdxo3EC84njJPORxnpLnm8J3WvgxR7ofdvcvMGAZ1nfdAEjSUYA2oNu2sUYbFE1QqHsLprVeCh18FBJC3yN6ZYGkViESBmXW6DPRi6J7LFTmlMfCulNdyfPnC4_zQDc:1rEwiT:zHp2vSUnLwEPiWpraWwQCrgp373yED6uEBXZSjebtv8", "expire_date": "2023-12-17T19:37:21.290Z"}}, {"model": "sessions.session", "pk": "mzo6vxmdzhhrny1igd8cr721gyndo48d", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0PoQoF69O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5MoOZ9m0l4Y5XObRLZUmlyI7MGC7zWO4U15BvGG-Fh5Knqfk-arwjVZ-KpEex83dHYxYx3_ddgCSdBSgDei-76zRBkUXFOrBgumtl0IHH4WEMAyIXlkgqVWIhEEZ9v0BCOxANw:1rMVzZ:niDlrQrAxLqtl5BvkAzYw2_bLJrWwpcyGMRgNjPOsFw", "expire_date": "2024-01-07T16:42:17.827Z"}}, {"model": "sessions.session", "pk": "n7nih11f0cl55ghcvnynocbbyfd5d44e", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rSIS7:o6xj6XGnUA1M_ZHIAKY5j_mGiFXoTu9jRrWuZB3vL1w", "expire_date": "2024-01-23T15:27:39.617Z"}}, {"model": "sessions.session", "pk": "npwyh97hu7esa02c4an488yst12ggnui", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rBIVm:PT3ADzEMcfHwgAfKmPvUkSj4NcsiVX0_tCabT5_CV2o", "expire_date": "2023-12-07T18:05:10.104Z"}}, {"model": "sessions.session", "pk": "ny3psw6hdjymwd12ww21i9dj9arxyqqv", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyG4UKA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXIOgZs97t5DDfKK4hXzJfCQ8nTmDxfFb7Ryo8l0v2wuX-BAeuwvPcNgCQdBWgDum0ba7RB0QSFurdgWuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVfWndT58wUQtz_b:1rEusA:U6K_J1tOI8EfdSgehaVZRfGZiAj0KbzPGoWwM3OQrsY", "expire_date": "2023-12-17T17:39:14.529Z"}}, {"model": "sessions.session", "pk": "odsse55nffsm2ormgqmu9dxl1ia1fevi", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rDOs0:tbFwfAiLDD_JKaXvxg1-FK33Nq0g2BPcg6eYU1luVVU", "expire_date": "2023-12-13T13:16:48.043Z"}}, {"model": "sessions.session", "pk": "olk43j53vqxgisrwh8tx4mt72b0vkn4m", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0PoQoF69O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5MoO57YBaEBdGuZwmUe3VJpciuzAgO02j-FOeQXxhvlaeCh5npLnq8I3WvmpRHocN3d3MGId_3XbAUjSUYA2oPu-s0YbFF1QqAcLprdeCh18FBLCMCB6ZYGkViESBmXY9wewl0D6:1rRajA:vwdH0goumKIXWiuc2NT6UiT4ch_OQr_OMAY92BfI2jM", "expire_date": "2024-01-21T16:46:20.888Z"}}, {"model": "sessions.session", "pk": "oma3lqm2bjh50i2a0pkuy5xtgl1an2if", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMl19:1rBIHy:QSxkhiZfdgj1MeHvCGy40JQmSUiIJOzVxmv7QrsbEJY", "expire_date": "2023-12-07T17:50:54.958Z"}}, {"model": "sessions.session", "pk": "p7kzdsqsqfavvq0i0n2hn9a4jyakua0u", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gzY7nfzGG6UVxCvmC-Fh5KnMXm-KnyjlR9LpPthc_8CA9ZheTctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2PzXnzxcQrj_Y:1rDjmw:2cT5wo1tkW9T2GiNnvAV0avviPHgOc1Urfa__MkGByI", "expire_date": "2023-12-14T11:36:58.703Z"}}, {"model": "sessions.session", "pk": "pnit3pms2lehuwo11q5uxppvgpwcdsqm", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rClLq:_4J48My2HtuZMozQQ6NwjEt5NQMMrVLySQwr5IXYQQk", "expire_date": "2023-12-11T19:04:58.427Z"}}, {"model": "sessions.session", "pk": "qnscjh4919svde34hh7lab929fd0ij9d", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyG4UKA9eu8XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mq6s7kcmMNlHt1SaXIpso4B220ew53yCuIN87XwUPI8Jc9XhW-08r5Eepw2d3cwYh3_9bEBkKSjAG1At21jjTYomqBQDxZMa70UOvgoJIRhQPTKAkmtQiQMyrDvD7vgP94:1rHMz3:R-5fE8SN4CXH5EmPN4FbyQOqkVYGS9ItxOHP6YoE37g", "expire_date": "2023-12-24T12:04:29.300Z"}}, {"model": "sessions.session", "pk": "qpvz65a4y7zoekgdleg2zb0y52oj3r3b", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rNeQO:YOSBR1ItLaNu9903CVABgwB7_URPoIYjGkCX6HPZwSc", "expire_date": "2024-01-10T19:54:40.201Z"}}, {"model": "sessions.session", "pk": "qw4x1ryb2anod5byi0nxm1wbssius4wg", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gzY7nfzGG6UVxCvmC-Fh5KnMXm-KnyjlR9LpPthc_8CA9ZheTctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2PzXnzxcQrj_Y:1rE5sM:W6xjMTktlVPWBpXGUlndpyiUwUX7NMcEtYppz9JOMq0", "expire_date": "2023-12-15T11:12:02.751Z"}}, {"model": "sessions.session", "pk": "r1p8gt9a4rvuz80lhgz950mx2ljkk9zp", "fields": {"session_data": ".eJxVjEEOwiAURO_CmjRQoECX7j2BMQT4vxY1EEurC-PdbZNuupvMezNf8k74QXCvBeucSq6kv0hNhaWSUcmvlDi_zKNbKk4uAemJIIcu-PjAvAG4-3wrTSx5nlJoNqXZaW3OBfB52t3DwejruK69YlYE5BZAKsQONZqByzV4BsbbzjCBTNvBAu_8EESLKkSrmG6jYcDI7w-uOUKV:1rUuFi:G7xZbGvx4aZgpErs1Ht_klHnude-_9xfygQ7R4rfOos", "expire_date": "2024-01-30T20:13:38.564Z"}}, {"model": "sessions.session", "pk": "r821x00949viu8h8ia0g37kbp97okqgj", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rIQ3m:4HGX8xmQThqOI2_CQeUc5nXFc0UqLX6uB_5gQxQ2ees", "expire_date": "2023-12-27T09:33:42.396Z"}}, {"model": "sessions.session", "pk": "se5qxxmt26jdll0xkfixt6jey8oy8bvt", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rMT8Q:tj8FpM7qT0SX4KZGF0DAbbTSt5hT9fQDcomrFjcLlF0", "expire_date": "2024-01-07T13:39:14.249Z"}}, {"model": "sessions.session", "pk": "sluq4rj9fzkp510hwxunvvo30pyhwno8", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rEukN:JXIZzQfXCebb2GX2RkZU4WRlcC1E4b3h-7nMzSLw-T4", "expire_date": "2023-12-17T17:31:11.968Z"}}, {"model": "sessions.session", "pk": "ssz6oc9zr9xwgncffrukh6eb1dlzpvyq", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0NwoUA9evcLjCELbC1qIJZWD8Z_t0160OubefNmDudpcHOl0aXI9gxY87t5DDfKK4hXzJfCQ8nTmDxfFb7Ryo8l0v2wuX-BAeuwvHctgCQdBWgDuutaa7RB0QaFurdgOuul0MFHISH0PaJXFkhqFSJhUGaJPhO9KLrHTHVKJVe2P9kGVKPOny9Qm0DR:1rRwpT:4r9sORUz7c_P4vM9I9chWjpB5lVd2XmrxFujH_SKZ_s", "expire_date": "2024-01-22T16:22:19.774Z"}}, {"model": "sessions.session", "pk": "t6asgdbfmb5r6xucbm8iq6xp1sf6ykpk", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMywyXX0:1rBZ2j:dNwr_FCVDt2-hRjV2opstrieFVbCbh50GOJsGqongCo", "expire_date": "2023-12-08T11:44:17.021Z"}}, {"model": "sessions.session", "pk": "t7el671rf2l0nf19c5rdvm3bk0d8jodd", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGllh_U1Kek6AkLW2N8SAbBEnUCDuTiKlgPbNvHkzh_M0uLnS6FJkHQO2-908hhvlFcQr5kvhoeRpTJ6vCt9o5ccS6X7Y3L_AgHVY3nsFIEjHBrQB3bbKGm2wUUGi7i2Y1nrR6OBjIyD0PaKXFkhoGSJhkGaJPhO9KLrHTHVKJVfWndT58wUQuj_c:1rEvH0:wqECBi3SztcB67d1WHrMxsCgv0ohgdHV8u_5vEUcuvo", "expire_date": "2023-12-17T18:04:54.830Z"}}, {"model": "sessions.session", "pk": "tm9ayhqo8t7468tbmzxhe5kj1vq7odai", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rEu3N:4HCy_sHtJ2Y7IdmQMhSV67WR6Bk8Qgklf_vKtpChg2U", "expire_date": "2023-12-17T16:46:45.334Z"}}, {"model": "sessions.session", "pk": "ui6lma9iu7htcwwfej4nbjyssubtwri2", "fields": {"session_data": ".eJxVjMsOwiAURP-FtSHcUuhj6b5fYAy5wMWiBmJpdWH8d9ukmy5nzpn5snekD3nzWqjMMafC-gtcT8zgMo9mKTSZ6FnPQLBDadE9KG3E3zHdMnc5zVO0fFP4TgsfsqfneXcPByOWcV1XHQQN2nrdgMKAjZKWqK2Do0YQgARsFekgRaU8drBGACd8qKENpCT7_QESQkBW:1rT21b:02F14ojiYu5jEvKDr7Cubu36lOdzPX0OStNX5c3pPRM", "expire_date": "2024-01-25T16:07:19.296Z"}}, {"model": "sessions.session", "pk": "uotltm739tixdownzdz2sxl37bv5540r", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rR7kq:sEJNIfz6zBiBlSRHHeIUbP21zhfD4ZEB7RgGP_6rwEg", "expire_date": "2024-01-20T09:50:08.843Z"}}, {"model": "sessions.session", "pk": "uv5xj2n89qoriov1d0pxcenk1b4ie3qe", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rIqCN:AormO2kkKMUcIbDR_levnpqfLLHywrCsU36LT38A27o", "expire_date": "2023-12-28T13:28:19.384Z"}}, {"model": "sessions.session", "pk": "vffrmw4di5bkkn0u1orccpkep0gmlju0", "fields": {"session_data": ".eJxVjMEOwiAQRP-FsyFLKQU8eu83kIVdpGpKUtqT8d9tkx70Npn3Zt4i4LaWsDVewkTiKrS4_HYR05PnA9AD53uVqc7rMkV5KPKkTY6V-HU73b-Dgq3sazTgdWTliXrDPLBll1W_BwRy6AcHmsH67EkNmKPu2MTkDdguOSAQny_6nzhB:1rDs9Z:k-LZ7oWP5HqBhfoUMXwPP-pIKDMj6JF3OGB1SU7u8d0", "expire_date": "2023-12-14T20:32:53.338Z"}}, {"model": "sessions.session", "pk": "vg5ui0osdrgekpwzkw2dxvbssyy56n3v", "fields": {"session_data": "e30:1rV6Nx:WJWzgs26CkqBHVL4vBhr7FzzQXsGYH-Kjb-aRxdouxs", "expire_date": "2024-01-31T09:10:57.189Z"}}, {"model": "sessions.session", "pk": "vh7ca79izaii7e9vvgmlc9k4nrmtfjlv", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rCQLN:KYDEH7UxEcUEUHVQQoQZiA-RqVdIy_cicIFmMNgRV_Q", "expire_date": "2023-12-10T20:39:05.270Z"}}, {"model": "sessions.session", "pk": "vj01xd1v85xyqfbjapag0iavi9cdbfc0", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rJGtw:eYT0WY2AfKTt13Ylx9T8FgaHe5woYKm1W6103wC6l2s", "expire_date": "2023-12-29T17:59:04.272Z"}}, {"model": "sessions.session", "pk": "wesd9z7hjcw2jyxa9l9vxw2dx9ircnll", "fields": {"session_data": ".eJxVjMEOwiAQRP-FsyFLKQU8eu83kIVdpGpKUtqT8d9tkx70Npn3Zt4i4LaWsDVewkTiKrS4_HYR05PnA9AD53uVqc7rMkV5KPKkTY6V-HU73b-Dgq3sazTgdWTliXrDPLBll1W_BwRy6AcHmsH67EkNmKPu2MTkDdguOSAQny_6nzhB:1rVTqN:L1U3g04y5s-xssh-TPTUlK8e6Kv0nu1bAhJUNB3msyA", "expire_date": "2024-02-01T10:13:51.283Z"}}, {"model": "sessions.session", "pk": "wnwb8wczdf0sb7yy0te9t685a5u22kz1", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hBsoGFcup8zkKYBGTWQzGdlvLtOMgvdvqp6LxFoW2vYljyHKYmLAHH63SLxI7cdpDu1W5fc2zpPUe6KPOgix57y83q4fweVlvqtzxZAZ0wK0AEOg_UOHSnLhrB4cIOPWiHHpDRwKUTReMgaDadMbJx4fwCxxTd3:1rJFJH:Z2cRCDCaArhNU_87DqCCeugIuTl6TklrsHOJUmCC6lE", "expire_date": "2023-12-29T16:17:07.094Z"}}, {"model": "sessions.session", "pk": "wr5howqq8xihbzr98nu83v32ebc73zr6", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rEVyu:ecUk5Z7YAG9zTIQfqbFuNqXDNvba62TUclNEXnZcwBU", "expire_date": "2023-12-16T15:04:32.444Z"}}, {"model": "sessions.session", "pk": "wr8squfkt4m5f203bl2a4ksnctq2ynxf", "fields": {"session_data": ".eJxVjMEOwiAQBf-Fc0PoQoF69O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5MoO57YB2QBcGuZwmUe3VJpciuzAgO02j-FOeQXxhvlaeCh5npLnq8I3WvmpRHocN3d3MGId_3XbAUjSUYA2oPu-s0YbFF1QqAcLprdeCh18FBLCMCB6ZYGkViESBmXY9wev7UD5:1rJEnZ:R6xQbWi7AV-oYP32Q3AUYa7SKthRPEwHLBTPftSrqD4", "expire_date": "2023-12-29T15:44:21.878Z"}}, {"model": "sessions.session", "pk": "wrsiv9hr96zc0i1rzu26nvjmp0dueufq", "fields": {"session_data": ".eJxVjMEOgjAQRP-lZ9MslELr0btfYEyz7S5SNW2koAfjvwsJB71NZt68t3A4T4ObC48uktgLJXa_ncdw47QOdMV0yTLkNI3RyxWR21rkMRPfDxv7JxiwDMsbNVjlubJEjWZuuWPTV80SEMigbQ0ohs72lqoWe69q1j5YDV0dDBAs0mfkF5N7zFymmFMR-1N9_nwBa7FAow:1rPJ56:XG89PgXXbZ_lgC2e-7OJLRKc6Z6QDuumiLIy1fQsX0Q", "expire_date": "2024-01-15T09:31:32.318Z"}}, {"model": "sessions.session", "pk": "wvz0sm3g91o8xddkth49vbz9s2lpcz9b", "fields": {"session_data": ".eJxVjDsOgzAQRO_iOrK8GH9ImZ4zWGt7NyaJjIShinL3gESRlDPvzbxFwG0tYWu0hCmLqwAlLr9lxPSkepD8wHqfZZrrukxRHoo8aZPjnOl1O92_g4Kt7OtuALZgY7YODDI6oyOR7zmRUwSgAb0hy1p1JuMAewRIKnMPnslo8fkCA9Q39Q:1rIXBK:RCMgR62up0OxTBrmcEdjF_WaTeE6FzSDFVmfa04jFak", "expire_date": "2023-12-27T17:09:58.587Z"}}, {"model": "sessions.session", "pk": "x4ym9yk7v599505xn5boa9vfom910ez7", "fields": {"session_data": ".eJxVjEEOgjAQRe_SddPAtEyLS_eewBgybQdBTRsp6MJ4dyVhw_a_9_5HvEZ-c-yeC5d5zKmIw9lIkChrCUY2Fyk6WuahWwpP3RjFQYDYbZ7CndMK4o3SNauQ0zyNXq2K2mhRpxz5cdzc3cFAZfjXdQOgGWMFaAHbtnEWLVVNMIS9A9s6rysMPlYaQt8TeeOANZoQmYKx4vsDhK9B6w:1rNsYY:T5Z4CSNy72t3LusU6JXiBpYBKU-Yqzxy55Sx65eRiug", "expire_date": "2024-01-11T11:00:02.087Z"}}, {"model": "sessions.session", "pk": "x678p35ejtn60prg94jas1l1t4dga2ib", "fields": {"session_data": ".eJxVjMEOwiAQBf-FsyF0oUB79O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5Mr6c3M5MIfLPLql0uRSZD0Dtts8hjvlFcQb5mvhoeR5Sp6vCt9o5acS6XHc3N3BiHX8100LIElHAdqA7rrWGm1QtEGhHiyYznopdPBRSAjDgOiVBZJahUgYlGHfH7fSP9g:1rKgLX:9KoBZX4aiqB13zBxU23nNQsxIugDTLJBioY2YSAqPnY", "expire_date": "2024-01-02T15:21:23.151Z"}}, {"model": "sessions.session", "pk": "x771swpn3e9n4l67c7x1piba7frvyuqj", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rEUq5:WAM-s0z7l2hyQJ0NiSoMqnPk2LM1IxeRojI2OnW_c80", "expire_date": "2023-12-16T13:51:21.453Z"}}, {"model": "sessions.session", "pk": "y0kf2qkb68n9db3uoeh5m42btp29j5um", "fields": {"session_data": ".eJxVjMEOwiAQBf-FM2noQoF69O4XGEMW2FrUQCytHoz_rk166fXNzPuwV6I3RfdcqM6p5MoO55YDcJAcLpw5XObRLZUmlyI7MGC7zWO4U15BvGG-liaUPE_JN6vSbLQ2pxLpcdzc3cGIdfzXbQcgSUcB2oDu-84abVB0QaEeLJjeeil08FFICMOA6JUFklqFSBiUYd8fApVBVw:1rLou9:cgkduvNwO3P8FwPI_z44L8BqcEzZFY3iEvOIbaKEcFA", "expire_date": "2024-01-05T18:41:49.130Z"}}, {"model": "sessions.session", "pk": "y7th2z5ztt0mrge07qjttpkfq0gd0nzu", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMSwyXX0:1rMUUc:1LAOQaMG0eTqpymUHLu-q8iqman15Ip0wjH25fDJrIw", "expire_date": "2024-01-07T15:06:14.776Z"}}, {"model": "sessions.session", "pk": "ymoo2cb0norgag8tdgi4p0x9urhjavwg", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMjJdfQ:1rEt0q:C551Fvmb1uuSGkwtZpPBeRCG2eaDJuPIUa5UCjVP_nA", "expire_date": "2023-12-17T15:40:04.629Z"}}, {"model": "sessions.session", "pk": "z37xe0b4r9yus1golg07tbarud7kcgfy", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rM3YZ:s371ycZSgqkXg4OjRior-S2dDRKizQ7grdcTut_Fl4s", "expire_date": "2024-01-06T10:20:31.089Z"}}, {"model": "sessions.session", "pk": "z7j3m2g1e2fxzdu43lzlmor8nsqwu97b", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMSwyLDRdfQ:1rBHfL:SPiRDUxhCUn2BjeoSfvKmyWu_1paXnutHXlAvHB3o4M", "expire_date": "2023-12-07T17:10:59.601Z"}}, {"model": "sessions.session", "pk": "zeh5t53ktiatkojpazsj25dskfozuwgu", "fields": {"session_data": ".eJxVjDsOwjAQBe_i2oqS9TeU9JwAIWttb4gB2SJOoEDcHSKlSftm5n3YK9GbonsuVOdUcmWHc8clB8kFVxfOHC7z6JZKk0uRHRiw3eYx3CmvIN4wX0sTSp6n5JtVaTZam1OJ9Dhu7u5gxDr-604BCNKxBW1A972yRhtsVZCoBwumt160OvjYCgjDgOilBRJahkgYpGHfHy7iQYo:1rM4vl:r2qQZnqWtpPvX5wkT6c8qWVvO0rCtcJlpyNfc2k_mLs", "expire_date": "2024-01-06T11:48:33.268Z"}}, {"model": "sessions.session", "pk": "zo5jzy53kjrx5oyop1g7jjyonzaqixfa", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSE4UB5duvcLjCEDTC1qSiytLoz_bpt0odt7zj1v5nGeej9XGn1OrGXAdr9bwHijYQXpisOl8FiGacyBrwrfaOXHkuh-2Ny_QI-1X977BkCSTgK0Ae1cY402KJqoUHcWjLNBCh1DEhJi1yEGZYGkVjERRmWW6DPTi5J_zFSnXIbK2pN0588XUF9AEw:1rUXVU:dXHqz4f-PKOU-Fa0bjawaKBcwarW58Q_5iKkUYCVjRM", "expire_date": "2024-01-29T19:56:24.619Z"}}, {"model": "sessions.session", "pk": "ztx427fbkwkxbnmiw916i3aritpqybis", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSE4UB4u3fsFxpABphY1EEurC-O_a5Nuur3nnPthr0xvSv45U5tyLY0dztJddszjPA1-bjT6nNiBAdtsAeOdygLSDcu18ljLNObAF4WvtPFTTfQ4ru7mYMA2_Ot9ByBJJwHagHaus0YbFF1UqHsLxtkghY4hCQmx7xGDskBSq5gIozLs-wPoB0AT:1rYNHL:XJIsC8tRHRAlOW87chFQOPCva3rkDTxPj0u5SZaFcCs", "expire_date": "2024-02-09T09:49:39.018Z"}}, {"model": "sessions.session", "pk": "zzeksh7vp0ngd33q3xfdfpkycqdqddcb", "fields": {"session_data": "eyJ2aWV3ZWRfcXVlc3Rpb25zIjpbMV19:1rCd5O:-VS3a-e-sV_1jDUVcb2tsOmNEIuMpyUqOQBl-1Luxpo", "expire_date": "2023-12-11T10:15:26.235Z"}}, {"model": "accounts.customuser", "pk": 1, "fields": {"password": "pbkdf2_sha256$600000$4j5lNubx3GLgsO92SGHH7W$tOJKL46IJV5wJy7+2qCV8yjBtOHr6jDCB5IWYk8kYUs=", "last_login": "2024-02-03T06:18:11.023Z", "is_superuser": true, "username": "admin", "first_name": "", "last_name": "", "is_staff": true, "is_active": true, "date_joined": "2023-12-07T12:05:47.103Z", "email": "admin@gmail.com", "profile_img": "src/default_user.png", "bio": "", "github_link": null, "linkdin_link": null, "groups": [], "user_permissions": []}}, {"model": "accounts.customuser", "pk": 2, "fields": {"password": "pbkdf2_sha256$600000$jbNngDE9QuVNtqIOFJEEi8$zNYnlLqYCvIG5G7cK8jO49CjIPF+v9VH/kiM8atrvVU=", "last_login": "2024-02-09T09:23:18.707Z", "is_superuser": false, "username": "afshin", "first_name": "", "last_name": "", "is_staff": false, "is_active": true, "date_joined": "2023-12-07T12:33:43.120Z", "email": "fathiiafshin@gmail.com", "profile_img": "users/20240122/1082529.png", "bio": "hi my name is afshin.and i want to", "github_link": "https://github.com/Afshinfathi21", "linkdin_link": "https://www.linkedin.com/in/afshin-fathi-b46379278/", "groups": [], "user_permissions": []}}, {"model": "accounts.customuser", "pk": 3, "fields": {"password": "pbkdf2_sha256$600000$tbEvRzSxxibZxqyyJgUtTZ$Z5Dw/wDNUVolCc79g0zY88pl1paJM5Zgizlk/nzIiyE=", "last_login": "2024-02-01T11:25:36.180Z", "is_superuser": false, "username": "mmd", "first_name": "mmd", "last_name": "mmdian", "is_staff": false, "is_active": true, "date_joined": "2023-12-07T12:43:25.113Z", "email": "fathiafshin@gmail.com", "profile_img": "users/20240106/905276.jpg", "bio": "hi", "github_link": "https://github.com/Afshinfathi21", "linkdin_link": null, "groups": [], "user_permissions": []}}, {"model": "accounts.customuser", "pk": 10, "fields": {"password": "pbkdf2_sha256$600000$sJyy9Sc1GHdz9zT2FCCcpf$V/CfXd9IQEv37gZ3osYZSZ4BSZLqAWTFZPS9gUq/auw=", "last_login": "2024-01-25T15:56:10.900Z", "is_superuser": false, "username": "farid", "first_name": "", "last_name": "", "is_staff": false, "is_active": true, "date_joined": "2023-12-27T16:51:18.797Z", "email": "livaiisencho@gmail.com", "profile_img": "users/20231227/669047.png", "bio": "hello my name is farid,im a student.", "github_link": "https://github.com/Afshinfathi21", "linkdin_link": null, "groups": [], "user_permissions": []}}, {"model": "accounts.customuser", "pk": 26, "fields": {"password": "pbkdf2_sha256$600000$v6MkpSjQikC33D3gvMGdVW$Rs9+hlQ2yIRyuSrmy+TwCbl2fGix6VQNJi09fi2QVaU=", "last_login": null, "is_superuser": false, "username": "afshin2", "first_name": "", "last_name": "", "is_staff": false, "is_active": false, "date_joined": "2024-02-01T11:49:59.181Z", "email": "test433@gmail.com", "profile_img": "src/default_user.png", "bio": "test", "github_link": "", "linkdin_link": null, "groups": [], "user_permissions": []}}, {"model": "tags.tag", "pk": 1, "fields": {"tagname": "python"}}, {"model": "tags.tag", "pk": 2, "fields": {"tagname": "html"}}, {"model": "tags.tag", "pk": 3, "fields": {"tagname": "css"}}, {"model": "tags.tag", "pk": 4, "fields": {"tagname": "c#"}}, {"model": "tags.tag", "pk": 5, "fields": {"tagname": "java"}}, {"model": "tags.tag", "pk": 6, "fields": {"tagname": "javascript"}}, {"model": "questions.question", "pk": 39, "fields": {"title": "CID encoding of font", "description": "<p>0</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>I&#39;am trying to extrat text from a pdf with python. None of the packages I tried could read it (PyPDF2,pdfminer,fitz etc.), but some of them could return me the cid encodings. (eg. (cid:3) ).</p>\r\n\r\n<p>Now I read the file the &quot;brute force&quot; way, meaning I managed to found out the cid decoding from some examples. (That notebook can be found&nbsp;here&nbsp;on kaggle.)</p>\r\n\r\n<p>I searched online for the elegant way, and found a lot of mentioning of&nbsp;<em>Registry-Ordering-Supplement</em>&nbsp;and how you should find the encodings by knowing the&nbsp;<em>font</em>.</p>\r\n\r\n<p>Altough fitz can not interpret the text, it says the font is&nbsp;<em>CourierNewPSMT</em>. Now even with this information, I could not find the ROS info/ CID encoding/ CID mapping / CID collection.</p>\r\n\r\n<p>Can someone tell me, how to interpret the cid encoded text, knowing the font?</p>", "user": 2, "views": 19, "created_at": "2024-01-29T09:52:27.087Z", "slug": "cid-encoding-of-font", "tag": [1, 2, 3]}}, {"model": "questions.question", "pk": 40, "fields": {"title": "Get time zone information from a date in nodeJS or momentJS", "description": "<p>We have a current time called 11:10 PM as the string value. We will create a date object with this time. Now from this date can we get the timezone for this date value?</p>\r\n\r\n<p>We are expecting the timezone like Asia/Kolkata, etc. Is it possible to get this value in NodeJS/MomentJS</p>", "user": 10, "views": 11, "created_at": "2024-01-29T09:52:54.536Z", "slug": "get-time-zone-information-from-a-date-in-nodejs-or-momentjs", "tag": [2, 5, 6]}}, {"model": "questions.question", "pk": 41, "fields": {"title": "Matplotlib ValueError: trying to find out indices of the combinations, that have p < 0.05 and >= 0.01 [duplicate]", "description": "<p>I was trying to get the output of the summary from the Tukey test or the&nbsp;<code>model.tukeyhsd()</code>. Based on the obtained table from this summary, I wanted first to get all groups (or the indices of these groups) where the p-value is greater or equal to 0.05 (The null hypothesis). I was able to do this by two means:</p>\r\n\r\n<ol>\r\n\t<li>\r\n\t<p>I could divide the analyzed groups by filtering out the combinations if the null hypothesis is rejected or approved (&lt; 0.05 and &gt;= 0.05)&nbsp;<code>model.tukeyhsd().reject==True</code>&nbsp;(and reject==False).</p>\r\n\t</li>\r\n\t<li>\r\n\t<p>The other way to do this is to obtain the indices of the pvalues, higher (or lower) than 0.05. This is the code to do it:</p>\r\n\t</li>\r\n</ol>\r\n\r\n<pre>\r\n<code>print(np.where(result.pvalues &gt;= 0.05)[0])\r\n</code></pre>\r\n\r\n<p>However, I wanted additionally to be able to find the other groups: for p &lt; 0.01, and for p &lt; 0.001. For this purpose I had to find out the pvalues between 0.05 and 0.01; lower that 0.05 but higher than 0.01.</p>\r\n\r\n<p>So, I tried this code:</p>\r\n\r\n<pre>\r\n<code>print(np.where(result.pvalues &lt; 0.05 and result.pvalues &gt;= 0.01)[0])\r\n</code></pre>\r\n\r\n<p>However, I received an error message:</p>\r\n\r\n<pre>\r\n<code>ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\r\n</code></pre>\r\n\r\n<p>What is the meaning of this message, and why am I receiving it in the first place?</p>\r\n\r\n<p>As far as I know, a.any() and a.all() give confirmation if any (respectively all) elements of this group comply to the condition. But I don&#39;t want that, I want to get array of these elements, not True or False.</p>\r\n\r\n<p>Is it even possible to make the code do what I actually want?</p>", "user": 3, "views": 11, "created_at": "2024-01-29T09:53:31.950Z", "slug": "matplotlib-valueerror-trying-to-find-out-indices-of-the-combinations-that-have-p-005-and-001-duplicate", "tag": [2, 3, 5, 6]}}, {"model": "questions.question", "pk": 42, "fields": {"title": "Regex ignore specific string between two strings", "description": "<p>So I have a string like this:</p>\r\n\r\n<pre>\r\n<code>test //ita https://example.com lics// test // another // one\r\n</code></pre>\r\n\r\n<p>I can capture text between 2 &quot;//&quot; strings easy enough like so:</p>\r\n\r\n<pre>\r\n<code>\\/\\/(.*?)\\/\\/\r\n</code></pre>\r\n\r\n<p>Which will return the groups&nbsp;<code>ita https:</code>&nbsp;and&nbsp;<code>test</code>&nbsp;however I&#39;m trying to get it to ignore the cases where there is a &quot;http://&quot; or &quot;https://&quot;.</p>\r\n\r\n<p>So I&#39;m trying to get it so that it only returns&nbsp;<code>ita https://example.com lics</code>&nbsp;and&nbsp;<code>another</code>.</p>", "user": 10, "views": 3, "created_at": "2024-01-29T09:54:01.024Z", "slug": "regex-ignore-specific-string-between-two-strings", "tag": [2, 3, 4, 6]}}, {"model": "questions.question", "pk": 43, "fields": {"title": "Excel Formula to highlight cell(s) in the same column based on time difference", "description": "<p>I want to highlight two cells if the cell under another cell is within 15 minutes in the same column only one row under the other. Essentially to highlight any 2 cells within the same column separated by 1 row above/under another one.</p>\r\n\r\n<p>So if A1 is 1/28/2024 10:15:42 AM and A2 is 1/28/2024 11:02:03 AM, they are within 15 minutes apart, so highlight the two cells with that difference.</p>\r\n\r\n<p>1/28/2024 10:15:42 AM</p>\r\n\r\n<p>1/28/2024 11:02:03 AM</p>\r\n\r\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/xBJAq.png\" /></p>\r\n\r\n<p>Ideally I would be also able to do gradient highlighting in the sense that any difference of more than 15 minutes would highlight the two cells red and anything between 10 and 15 minutes would be highlighted orange</p>\r\n\r\n<p>This has plagued me and would greatly appreciate anyone&#39;s advice immensely.</p>\r\n\r\n<p>tried a bunch of conditional formatting options with no luck, usually i&#39;ve always been able to find a guide on this site or another for similar issues but this problem I&#39;m having no success.</p>", "user": 10, "views": 5, "created_at": "2024-01-29T09:54:42.041Z", "slug": "excel-formula-to-highlight-cells-in-the-same-column-based-on-time-difference", "tag": [1, 3, 4, 6]}}, {"model": "questions.question", "pk": 45, "fields": {"title": "Java Photoshop Script Execution", "description": "<p>I am trying to execute&nbsp;<code>photoshop script</code>&nbsp;using&nbsp;<code>java</code>&nbsp;for that i use&nbsp;<strong>following code</strong></p>\r\n\r\n<pre>\r\n<code>  public class Program {\r\n    public static void main(String[] args) throws IOException {\r\n        ProcessBuilder p = new ProcessBuilder();\r\n        p.command(&quot;Photoshop.exe&quot;, &quot;TestHelloWorl.jsx&quot;);\r\n        p.start();\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>But on different system photoshop exe file path is differnt . Then how solve this problem.</p>", "user": 2, "views": 5, "created_at": "2024-01-29T09:55:43.300Z", "slug": "java-photoshop-script-execution", "tag": [1, 4]}}, {"model": "questions.question", "pk": 47, "fields": {"title": "React Checkbox Component Unchecking Issue - All Checkboxes Cleared and Array Refilled on Slide Change", "description": "<p>I&#39;m encountering a perplexing issue in a React application where I have implemented a set of checkboxes. The initial state is such that all checkboxes are selected by default. However, when I uncheck any checkbox, it seems to clear all the checkboxes and retain only the unchecked one. Additionally, upon moving to the next slide and returning, the array holding the selected checkbox values is refilled with all the default values.</p>\r\n\r\n<pre>\r\n<code>import React from &quot;react&quot;;\r\nimport { Checkbox } from &quot;@carbon/react&quot;;\r\n\r\nconst CheckBoxInput = ({\r\n  item,\r\n  data,\r\n  setSelectedCheckboxValues,\r\n  selectedCheckboxValues,\r\n}) =&gt; {\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n\r\n  React.useEffect(() =&gt; {\r\n    setIsChecked(selectedCheckboxValues.includes(item.title));\r\n  }, [selectedCheckboxValues, item.title]);\r\n\r\n  const handleCheckBoxChange = React.useCallback(\r\n    (event, { checked, id }) =&gt; {\r\n      const updatedValues = selectedCheckboxValues.includes(id)\r\n        ? selectedCheckboxValues.filter((val) =&gt; val !== id)\r\n        : [...selectedCheckboxValues, id];\r\n      setSelectedCheckboxValues(updatedValues);\r\n    },\r\n    [selectedCheckboxValues, setSelectedCheckboxValues]\r\n  );\r\n\r\n  return (\r\n    &lt;&gt;\r\n      &lt;Checkbox\r\n        onChange={handleCheckBoxChange}\r\n        labelText={item.title}\r\n        id={item.title}\r\n        defaultChecked={isChecked}\r\n      /&gt;\r\n    &lt;/&gt;\r\n  );\r\n};\r\n\r\nexport default CheckBoxInput;\r\n\r\n\r\n</code></pre>", "user": 2, "views": 7, "created_at": "2024-01-29T09:56:52.249Z", "slug": "react-checkbox-component-unchecking-issue-all-checkboxes-cleared-and-array-refilled-on-slide-change", "tag": [1, 2, 5, 6]}}, {"model": "questions.question", "pk": 48, "fields": {"title": "lost timezone value in redshift with postgresql external table", "description": "<ol>\r\n\t<li>\r\n\t<p>postgresql client timezone = KST and then example query result&nbsp;postgresql result</p>\r\n\t</li>\r\n\t<li>\r\n\t<p>in redshift querying by external table&nbsp;redshift result</p>\r\n\t</li>\r\n</ol>\r\n\r\n<p>i`m lost timezone value.... +09:00 -&gt; +00</p>\r\n\r\n<p>if redshift set timezone Asia/Seoul then&nbsp;change timezone redshift result</p>\r\n\r\n<p>not lost timezone but not same...</p>\r\n\r\n<p>how to working in redshift...</p>", "user": 3, "views": 4, "created_at": "2024-01-29T09:58:46.781Z", "slug": "lost-timezone-value-in-redshift-with-postgresql-external-table", "tag": [1, 6]}}, {"model": "questions.question", "pk": 50, "fields": {"title": "how to use linq with union multi table orderby item without duplicate with dapper in VB.NET", "description": "<p>I&#39;m trying to use linq with union multi table orderby item without duplicate with dapper in VB.NET.</p>\r\n\r\n<p>But the result is not being duplicate is there something wrong with my code. Please Guide Me.</p>\r\n\r\n<p>Thanks</p>\r\n\r\n<p><img alt=\"\" src=\"https://i.stack.imgur.com/qZLUG.png\" style=\"height:94px; width:200px\" /></p>", "user": 10, "views": 3, "created_at": "2024-01-29T10:03:47.343Z", "slug": "how-to-use-linq-with-union-multi-table-orderby-item-without-duplicate-with-dapper-in-vbnet", "tag": [1, 2, 3]}}, {"model": "questions.question", "pk": 51, "fields": {"title": "testing ask question", "description": "<h4>test&nbsp;<span style=\"font-family:Comic Sans MS,cursive\">sfdsf<span style=\"font-size:9px\">sfdf<span style=\"color:#2ecc71\">sdfsfasfdasf</span></span></span></h4>", "user": 3, "views": 2, "created_at": "2024-01-30T16:12:54.471Z", "slug": "testing-ask-question", "tag": [1, 2]}}, {"model": "questions.question", "pk": 52, "fields": {"title": "testing", "description": "<h2><span style=\"color:#2ecc71\">testing</span></h2>", "user": 2, "views": 1, "created_at": "2024-02-03T07:38:35.408Z", "slug": "testing", "tag": [1, 2]}}, {"model": "questions.comment", "pk": 30, "fields": {"comment": "<p>I find that taking the bit-wise complement works well, and quickly.</p>\r\n\r\n<pre>\r\n<code>var color = 0x320ae3;\r\nvar complement = 0xffffff ^ color;\r\n</code></pre>\r\n\r\n<p>I&#39;m not sure if it&#39;s a perfect complement in the sense of &quot;mixes together to form a 70% grey&quot;, however a 70% grey is &quot;pure white&quot; in terms of color timing in film. It occurred to me that XORing the RGB hex out of pure white might be a good first approximation. You could also try a darker grey to see how that works for you.</p>\r\n\r\n<p>Again, this is a fast approximation and I make no guarantees that it&#39;ll be perfectly accurate.</p>\r\n\r\n<p>See&nbsp;https://github.com/alfl/textful/blob/master/app.js#L38&nbsp;for my implementation.</p>", "question": 40, "user": 2, "file": "", "is_answer": false, "created_at": "2024-01-29T19:27:22.264Z"}}, {"model": "questions.comment", "pk": 32, "fields": {"comment": "<p>Rather than reinventing the wheel, I found a library to work with colors.</p>\r\n\r\n<p>Tiny Color</p>\r\n\r\n<p>This is how you would implement some of the other answers using it.</p>\r\n\r\n<pre>\r\n<code>color1 = tinycolor2(&#39;#f00&#39;).spin(180).toHexString(); // Hue Shift\r\ncolor2 = tinycolor2(&quot;#f00&quot;).complement().toHexString(); // bitwise</code></pre>", "question": 39, "user": 2, "file": "", "is_answer": true, "created_at": "2024-01-29T19:29:50.945Z"}}, {"model": "questions.comment", "pk": 33, "fields": {"comment": "<pre>\r\n<code>function componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? &quot;0&quot; + hex : hex;\r\n}\r\n\r\n\r\nfunction hexToRgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n}\r\n\r\nfunction rgbComplimentary(r,g,b){\r\n\r\n    var hex = &quot;#&quot; + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n    var rgb = &#39;rgb(&#39; + (hex = hex.replace(&#39;#&#39;, &#39;&#39;)).match(new RegExp(&#39;(.{&#39; + hex.length/3 + &#39;})&#39;, &#39;g&#39;)).map(function(l) { return parseInt(hex.length%2 ? l+l : l, 16); }).join(&#39;,&#39;) + &#39;)&#39;;\r\n\r\n    // Get array of RGB values\r\n    rgb = rgb.replace(/[^\\d,]/g, &#39;&#39;).split(&#39;,&#39;);\r\n\r\n    var r = rgb[0]/255.0, g = rgb[1]/255.0, b = rgb[2]/255.0;\r\n\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var h, s, l = (max + min) / 2.0;\r\n\r\n    if(max == min) {\r\n        h = s = 0;  //achromatic\r\n    } else {\r\n        var d = max - min;\r\n        s = (l &gt; 0.5 ? d / (2.0 - max - min) : d / (max + min));\r\n\r\n        if(max == r &amp;&amp; g &gt;= b) {\r\n            h = 1.0472 * (g - b) / d ;\r\n        } else if(max == r &amp;&amp; g &lt; b) {\r\n            h = 1.0472 * (g - b) / d + 6.2832;\r\n        } else if(max == g) {\r\n            h = 1.0472 * (b - r) / d + 2.0944;\r\n        } else if(max == b) {\r\n            h = 1.0472 * (r - g) / d + 4.1888;\r\n        }\r\n    }\r\n\r\n    h = h / 6.2832 * 360.0 + 0;\r\n\r\n    // Shift hue to opposite side of wheel and convert to [0-1] value\r\n    h+= 180;\r\n    if (h &gt; 360) { h -= 360; }\r\n    h /= 360;\r\n\r\n    // Convert h s and l values into r g and b values\r\n    // Adapted from answer by Mohsen http://stackoverflow.com/a/9493060/4939630\r\n    if(s === 0){\r\n        r = g = b = l; // achromatic\r\n    } else {\r\n        var hue2rgb = function hue2rgb(p, q, t){\r\n            if(t &lt; 0) t += 1;\r\n            if(t &gt; 1) t -= 1;\r\n            if(t &lt; 1/6) return p + (q - p) * 6 * t;\r\n            if(t &lt; 1/2) return q;\r\n            if(t &lt; 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        };\r\n\r\n        var q = l &lt; 0.5 ? l * (1 + s) : l + s - l * s;\r\n        var p = 2 * l - q;\r\n\r\n        r = hue2rgb(p, q, h + 1/3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n\r\n    r = Math.round(r * 255);\r\n    g = Math.round(g * 255); \r\n    b = Math.round(b * 255);\r\n\r\n    // Convert r b and g values to hex\r\n    rgb = b | (g &lt;&lt; 8) | (r &lt;&lt; 16); \r\n    return hexToRgb(&quot;#&quot; + (0x1000000 | rgb).toString(16).substring(1));\r\n\r\n}\r\n\r\n\r\nconsole.log(rgbComplimentary(242, 211, 215));</code></pre>", "question": 43, "user": 2, "file": "", "is_answer": false, "created_at": "2024-01-29T19:30:23.455Z"}}, {"model": "questions.comment", "pk": 34, "fields": {"comment": "<pre>\r\n<code>function hexComplimentary(hex){\r\n\r\n    var rgb = &#39;rgb(&#39; + (hex = hex.replace(&#39;#&#39;, &#39;&#39;)).match(new RegExp(&#39;(.{&#39; + hex.length/3 + &#39;})&#39;, &#39;g&#39;)).map(function(l) { return parseInt(hex.length%2 ? l+l : l, 16); }).join(&#39;,&#39;) + &#39;)&#39;;\r\n\r\n    // Get array of RGB values\r\n    rgb = rgb.replace(/[^\\d,]/g, &#39;&#39;).split(&#39;,&#39;);\r\n\r\n    var r = rgb[0]/255.0, g = rgb[1]/255.0, b = rgb[2]/255.0;\r\n\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var h, s, l = (max + min) / 2.0;\r\n\r\n    if(max == min) {\r\n        h = s = 0;  //achromatic\r\n    } else {\r\n        var d = max - min;\r\n        s = (l &gt; 0.5 ? d / (2.0 - max - min) : d / (max + min));\r\n\r\n        if(max == r &amp;&amp; g &gt;= b) {\r\n            h = 1.0472 * (g - b) / d ;\r\n        } else if(max == r &amp;&amp; g &lt; b) {\r\n            h = 1.0472 * (g - b) / d + 6.2832;\r\n        } else if(max == g) {\r\n            h = 1.0472 * (b - r) / d + 2.0944;\r\n        } else if(max == b) {\r\n            h = 1.0472 * (r - g) / d + 4.1888;\r\n        }\r\n    }\r\n\r\n    h = h / 6.2832 * 360.0 + 0;\r\n\r\n    // Shift hue to opposite side of wheel and convert to [0-1] value\r\n    h+= 180;\r\n    if (h &gt; 360) { h -= 360; }\r\n    h /= 360;\r\n\r\n    if(s === 0){\r\n        r = g = b = l; // achromatic\r\n    } else {\r\n        var hue2rgb = function hue2rgb(p, q, t){\r\n            if(t &lt; 0) t += 1;\r\n            if(t &gt; 1) t -= 1;\r\n            if(t &lt; 1/6) return p + (q - p) * 6 * t;\r\n            if(t &lt; 1/2) return q;\r\n            if(t &lt; 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        };\r\n\r\n        var q = l &lt; 0.5 ? l * (1 + s) : l + s - l * s;\r\n        var p = 2 * l - q;\r\n\r\n        r = hue2rgb(p, q, h + 1/3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n\r\n    r = Math.round(r * 255);\r\n    g = Math.round(g * 255); \r\n    b = Math.round(b * 255);\r\n\r\n    // Convert r b and g values to hex\r\n    rgb = b | (g &lt;&lt; 8) | (r &lt;&lt; 16); \r\n    return &quot;#&quot; + (0x1000000 | rgb).toString(16).substring(1);\r\n}\r\n\r\n\r\nconsole.log(hexComplimentary(&quot;#ff5a5a&quot;));</code></pre>", "question": 43, "user": 2, "file": "", "is_answer": false, "created_at": "2024-01-29T19:31:10.599Z"}}, {"model": "questions.comment", "pk": 35, "fields": {"comment": "<p>Usefuls simple and elegant solution, but unfortunately rgb complement does not work well for black, i.e., rgb(0,0,0). Needed this for Bootstrap cards created with JS loop for all colors in provided in &quot;json-color-names.json&quot;, so instead of the given solution, just calculated rgb components as: 255-r, 255-g, 255-b, or simply by using template literals:</p>\r\n\r\n<pre>\r\n<code>return `rgb(${255-r},${255-g},${255-b})`;\r\n</code></pre>\r\n\r\n<p>But, this one doesn&#39;t give good result for gray rgb(128,128,128). So, I&#39;d say that satisfactory results are achievable with other more complicated solutions or libraries, of which some are mentioned above, but when seeking for short and simple solution just to achieve text color different from the background, this might be the one, with just some formula tweaking (maybe by using mod or some other function).</p>", "question": 39, "user": 3, "file": "", "is_answer": false, "created_at": "2024-01-29T19:33:15.734Z"}}, {"model": "questions.comment", "pk": 36, "fields": {"comment": "<p>hello this is testing</p>", "question": 41, "user": 2, "file": "", "is_answer": false, "created_at": "2024-01-30T16:02:24.158Z"}}, {"model": "questions.comment", "pk": 37, "fields": {"comment": "<h1 dir=\"rtl\">╪º█î┘å █î┌⌐ ╪¬╪│╪¬ ╪º╪│╪¬<img alt=\"smiley\" src=\"http://127.0.0.1:8000/static/ckeditor/ckeditor/plugins/smiley/images/regular_smile.png\" style=\"height:23px; width:23px\" title=\"smiley\" /></h1>", "question": 50, "user": 3, "file": "", "is_answer": false, "created_at": "2024-02-01T11:41:20.080Z"}}, {"model": "questions.comment", "pk": 38, "fields": {"comment": "<blockquote>\r\n<p dir=\"rtl\"><span style=\"font-family:Georgia,serif\"><span style=\"font-size:12px\">╪º█î┘å █î┌⌐ ┘╛█î╪º┘à ╪¬╪│╪¬ ╪º╪│╪¬</span></span></p>\r\n</blockquote>", "question": 39, "user": 3, "file": "", "is_answer": true, "created_at": "2024-02-01T11:42:57.965Z"}}, {"model": "questions.comment", "pk": 39, "fields": {"comment": "<p><span style=\"font-family:Arial,Helvetica,sans-serif\">testing&nbsp;</span></p>", "question": 39, "user": 2, "file": "", "is_answer": true, "created_at": "2024-02-03T07:41:51.559Z"}}]
